// Code generated by MockGen. DO NOT EDIT.
// Source: ./x/ugov/keeper_interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
	ugov "github.com/umee-network/umee/v6/x/ugov"
)

// MockKeeper is a mock of Keeper interface.
type MockKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockKeeperMockRecorder
}

// MockKeeperMockRecorder is the mock recorder for MockKeeper.
type MockKeeperMockRecorder struct {
	mock *MockKeeper
}

// NewMockKeeper creates a new mock instance.
func NewMockKeeper(ctrl *gomock.Controller) *MockKeeper {
	mock := &MockKeeper{ctrl: ctrl}
	mock.recorder = &MockKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeeper) EXPECT() *MockKeeperMockRecorder {
	return m.recorder
}

// EmergencyGroup mocks base method.
func (m *MockKeeper) EmergencyGroup() types.AccAddress {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmergencyGroup")
	ret0, _ := ret[0].(types.AccAddress)
	return ret0
}

// EmergencyGroup indicates an expected call of EmergencyGroup.
func (mr *MockKeeperMockRecorder) EmergencyGroup() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmergencyGroup", reflect.TypeOf((*MockKeeper)(nil).EmergencyGroup))
}

// ExportGenesis mocks base method.
func (m *MockKeeper) ExportGenesis() *ugov.GenesisState {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportGenesis")
	ret0, _ := ret[0].(*ugov.GenesisState)
	return ret0
}

// ExportGenesis indicates an expected call of ExportGenesis.
func (mr *MockKeeperMockRecorder) ExportGenesis() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportGenesis", reflect.TypeOf((*MockKeeper)(nil).ExportGenesis))
}

// InflationCycleEnd mocks base method.
func (m *MockKeeper) InflationCycleEnd() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InflationCycleEnd")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// InflationCycleEnd indicates an expected call of InflationCycleEnd.
func (mr *MockKeeperMockRecorder) InflationCycleEnd() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InflationCycleEnd", reflect.TypeOf((*MockKeeper)(nil).InflationCycleEnd))
}

// InflationParams mocks base method.
func (m *MockKeeper) InflationParams() ugov.InflationParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InflationParams")
	ret0, _ := ret[0].(ugov.InflationParams)
	return ret0
}

// InflationParams indicates an expected call of InflationParams.
func (mr *MockKeeperMockRecorder) InflationParams() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InflationParams", reflect.TypeOf((*MockKeeper)(nil).InflationParams))
}

// InitGenesis mocks base method.
func (m *MockKeeper) InitGenesis(gs *ugov.GenesisState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitGenesis", gs)
	ret0, _ := ret[0].(error)
	return ret0
}

// InitGenesis indicates an expected call of InitGenesis.
func (mr *MockKeeperMockRecorder) InitGenesis(gs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitGenesis", reflect.TypeOf((*MockKeeper)(nil).InitGenesis), gs)
}

// MinGasPrice mocks base method.
func (m *MockKeeper) MinGasPrice() types.DecCoin {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MinGasPrice")
	ret0, _ := ret[0].(types.DecCoin)
	return ret0
}

// MinGasPrice indicates an expected call of MinGasPrice.
func (mr *MockKeeperMockRecorder) MinGasPrice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MinGasPrice", reflect.TypeOf((*MockKeeper)(nil).MinGasPrice))
}

// SetEmergencyGroup mocks base method.
func (m *MockKeeper) SetEmergencyGroup(p types.AccAddress) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetEmergencyGroup", p)
}

// SetEmergencyGroup indicates an expected call of SetEmergencyGroup.
func (mr *MockKeeperMockRecorder) SetEmergencyGroup(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetEmergencyGroup", reflect.TypeOf((*MockKeeper)(nil).SetEmergencyGroup), p)
}

// SetInflationCycleEnd mocks base method.
func (m *MockKeeper) SetInflationCycleEnd(startTime time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetInflationCycleEnd", startTime)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetInflationCycleEnd indicates an expected call of SetInflationCycleEnd.
func (mr *MockKeeperMockRecorder) SetInflationCycleEnd(startTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInflationCycleEnd", reflect.TypeOf((*MockKeeper)(nil).SetInflationCycleEnd), startTime)
}

// SetInflationParams mocks base method.
func (m *MockKeeper) SetInflationParams(lp ugov.InflationParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetInflationParams", lp)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetInflationParams indicates an expected call of SetInflationParams.
func (mr *MockKeeperMockRecorder) SetInflationParams(lp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInflationParams", reflect.TypeOf((*MockKeeper)(nil).SetInflationParams), lp)
}

// SetMinGasPrice mocks base method.
func (m *MockKeeper) SetMinGasPrice(p types.DecCoin) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMinGasPrice", p)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMinGasPrice indicates an expected call of SetMinGasPrice.
func (mr *MockKeeperMockRecorder) SetMinGasPrice(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMinGasPrice", reflect.TypeOf((*MockKeeper)(nil).SetMinGasPrice), p)
}

// MockParamsKeeper is a mock of ParamsKeeper interface.
type MockParamsKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockParamsKeeperMockRecorder
}

// MockParamsKeeperMockRecorder is the mock recorder for MockParamsKeeper.
type MockParamsKeeperMockRecorder struct {
	mock *MockParamsKeeper
}

// NewMockParamsKeeper creates a new mock instance.
func NewMockParamsKeeper(ctrl *gomock.Controller) *MockParamsKeeper {
	mock := &MockParamsKeeper{ctrl: ctrl}
	mock.recorder = &MockParamsKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockParamsKeeper) EXPECT() *MockParamsKeeperMockRecorder {
	return m.recorder
}

// InflationCycleEnd mocks base method.
func (m *MockParamsKeeper) InflationCycleEnd() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InflationCycleEnd")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// InflationCycleEnd indicates an expected call of InflationCycleEnd.
func (mr *MockParamsKeeperMockRecorder) InflationCycleEnd() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InflationCycleEnd", reflect.TypeOf((*MockParamsKeeper)(nil).InflationCycleEnd))
}

// InflationParams mocks base method.
func (m *MockParamsKeeper) InflationParams() ugov.InflationParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InflationParams")
	ret0, _ := ret[0].(ugov.InflationParams)
	return ret0
}

// InflationParams indicates an expected call of InflationParams.
func (mr *MockParamsKeeperMockRecorder) InflationParams() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InflationParams", reflect.TypeOf((*MockParamsKeeper)(nil).InflationParams))
}

// MinGasPrice mocks base method.
func (m *MockParamsKeeper) MinGasPrice() types.DecCoin {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MinGasPrice")
	ret0, _ := ret[0].(types.DecCoin)
	return ret0
}

// MinGasPrice indicates an expected call of MinGasPrice.
func (mr *MockParamsKeeperMockRecorder) MinGasPrice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MinGasPrice", reflect.TypeOf((*MockParamsKeeper)(nil).MinGasPrice))
}

// SetEmergencyGroup mocks base method.
func (m *MockParamsKeeper) SetEmergencyGroup(p types.AccAddress) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetEmergencyGroup", p)
}

// SetEmergencyGroup indicates an expected call of SetEmergencyGroup.
func (mr *MockParamsKeeperMockRecorder) SetEmergencyGroup(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetEmergencyGroup", reflect.TypeOf((*MockParamsKeeper)(nil).SetEmergencyGroup), p)
}

// SetInflationCycleEnd mocks base method.
func (m *MockParamsKeeper) SetInflationCycleEnd(startTime time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetInflationCycleEnd", startTime)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetInflationCycleEnd indicates an expected call of SetInflationCycleEnd.
func (mr *MockParamsKeeperMockRecorder) SetInflationCycleEnd(startTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInflationCycleEnd", reflect.TypeOf((*MockParamsKeeper)(nil).SetInflationCycleEnd), startTime)
}

// SetInflationParams mocks base method.
func (m *MockParamsKeeper) SetInflationParams(lp ugov.InflationParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetInflationParams", lp)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetInflationParams indicates an expected call of SetInflationParams.
func (mr *MockParamsKeeperMockRecorder) SetInflationParams(lp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInflationParams", reflect.TypeOf((*MockParamsKeeper)(nil).SetInflationParams), lp)
}

// SetMinGasPrice mocks base method.
func (m *MockParamsKeeper) SetMinGasPrice(p types.DecCoin) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMinGasPrice", p)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMinGasPrice indicates an expected call of SetMinGasPrice.
func (mr *MockParamsKeeperMockRecorder) SetMinGasPrice(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMinGasPrice", reflect.TypeOf((*MockParamsKeeper)(nil).SetMinGasPrice), p)
}

// MockWithEmergencyGroup is a mock of WithEmergencyGroup interface.
type MockWithEmergencyGroup struct {
	ctrl     *gomock.Controller
	recorder *MockWithEmergencyGroupMockRecorder
}

// MockWithEmergencyGroupMockRecorder is the mock recorder for MockWithEmergencyGroup.
type MockWithEmergencyGroupMockRecorder struct {
	mock *MockWithEmergencyGroup
}

// NewMockWithEmergencyGroup creates a new mock instance.
func NewMockWithEmergencyGroup(ctrl *gomock.Controller) *MockWithEmergencyGroup {
	mock := &MockWithEmergencyGroup{ctrl: ctrl}
	mock.recorder = &MockWithEmergencyGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithEmergencyGroup) EXPECT() *MockWithEmergencyGroupMockRecorder {
	return m.recorder
}

// EmergencyGroup mocks base method.
func (m *MockWithEmergencyGroup) EmergencyGroup() types.AccAddress {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmergencyGroup")
	ret0, _ := ret[0].(types.AccAddress)
	return ret0
}

// EmergencyGroup indicates an expected call of EmergencyGroup.
func (mr *MockWithEmergencyGroupMockRecorder) EmergencyGroup() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmergencyGroup", reflect.TypeOf((*MockWithEmergencyGroup)(nil).EmergencyGroup))
}
