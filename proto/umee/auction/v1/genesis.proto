syntax = "proto3";
package umee.auction.v1;

import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "umee/auction/v1/auction.proto";

option go_package = "github.com/umee-network/umee/v6/x/auction";

option (gogoproto.goproto_getters_all) = false;
// option (gogoproto.equal_all) = false;

// GenesisState defines the x/auction module's genesis state.
message GenesisState {
  RewardsParams rewards_params = 1 [(gogoproto.nullable) = false];
  // Latest active (in bid phase) reward auction.
  uint32 reward_auction_id = 2;
  // Latest highest bid.
  string highest_bidder = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Tokens collected for the current auction.
  repeated cosmos.base.v1beta1.Coin current_rewards = 4 [(gogoproto.nullable) = false];
  // Tokens collected for the next auction, while the current reward auction is still in the
  // bid phase.
  repeated cosmos.base.v1beta1.Coin next_rewards                = 5 [(gogoproto.nullable) = false];
  google.protobuf.Timestamp         current_rewards_auction_end = 6 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}
