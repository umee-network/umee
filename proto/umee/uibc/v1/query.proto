syntax = "proto3";
package umee.uibc.v1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "umee/uibc/v1/quota.proto";

option go_package = "github.com/umee-network/umee/v4/x/uibc";

option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the x/uibc module.
  rpc Params(QueryParams) returns (QueryParamsResponse) {
    option (google.api.http).get = "/umee/uibc/v1/params";
  }

  // Quota queries the rate limits of ibc denoms.
  // If denom is empty, returns quota for all tokens.
  rpc Quota(QueryQuota) returns (QueryQuotaResponse) {
    option (google.api.http).get = "/umee/uibc/v1/quota/{denom}";
  }
}

// QueryParams defines the request structure for the Params gRPC service
// handler.
message QueryParams {}

// QueryParamsResponse defines the response structure for the Params gRPC
// service handler.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryQuota defines request type for query the quota of denoms
message QueryQuota {
  string denom = 1;
}

// QueryQuotaResponse defines response type of Query/Quota
message QueryQuotaResponse {
  repeated cosmos.base.v1beta1.DecCoin quotas = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false
  ];
}
