syntax = "proto3";
package umeenetwork.umee.incentive.v1;

option go_package = "github.com/umee-network/umee/v3/x/incentive";

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "umee/incentive/v1/incentive.proto";

// GenesisState defines the x/incentive module's genesis state.
message GenesisState {
  Params                    params               = 1 [(gogoproto.nullable) = false];
  repeated IncentiveProgram completed_programs   = 2 [(gogoproto.nullable) = false];
  repeated IncentiveProgram ongoing_programs     = 3 [(gogoproto.nullable) = false];
  repeated IncentiveProgram upcoming_programs    = 4 [(gogoproto.nullable) = false];
  uint32                    next_program_id      = 5;
  uint64                    last_rewards_time    = 6;
  repeated cosmos.base.v1beta1.Coin total_bonded = 7 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated BondAmount        bond_amounts        = 8 [(gogoproto.nullable) = false];
  repeated PendingReward     pending_rewards     = 9 [(gogoproto.nullable) = false];
  repeated RewardBasis       reward_bases        = 10 [(gogoproto.nullable) = false];
  repeated RewardAccumulator reward_accumulators = 11 [(gogoproto.nullable) = false];
  repeated Unbonding         unbondings          = 12 [(gogoproto.nullable) = false];
}

// BondAmount tracks the amount of coins of one uToken denomination bonded to a
// given reward tier by a single account.
message BondAmount {
  string                   account = 1;
  uint32                   tier    = 2;
  cosmos.base.v1beta1.Coin amount  = 3 [(gogoproto.nullable) = false];
}

// PendingReward tracks the amount of rewards that a given account has calculated
// but not yet claimed.
message PendingReward {
  string   account                                 = 1;
  repeated cosmos.base.v1beta1.Coin pending_reward = 2 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// RewardBasis tracks the value of a given tier and lock denom's RewardAccumulator
// at the last time a specific account calculated pending rewards for it.
message RewardBasis {
  string   account                                  = 1;
  uint32   tier                                     = 2;
  string   denom                                    = 3;
  repeated cosmos.base.v1beta1.DecCoin reward_basis = 4 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"
  ];
}

// RewardAccumulator is a global reward tracking struct that indicates the amount
// of rewards that a single unit of denom would have acucmulated if it was bonded
// at a given tier since genesis.
message RewardAccumulator {
  uint32   tier                                     = 1;
  string   denom                                    = 2;
  repeated cosmos.base.v1beta1.DecCoin reward_basis = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"
  ];
}

// Unbonding is a structure that tracks an in-progress token unbonding.
message Unbonding {
  string                   account = 1;
  uint32                   tier    = 2;
  uint64                   end     = 3;
  cosmos.base.v1beta1.Coin amount  = 4 [(gogoproto.nullable) = false];
}