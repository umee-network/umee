syntax = "proto3";
package umee.metoken.v1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "umee/metoken/v1/metoken.proto";
import "umee/metoken/v1/genesis.proto";

option go_package = "github.com/umee-network/umee/v6/x/metoken";

option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the x/metoken module.
  rpc Params(QueryParams) returns (QueryParamsResponse) {
    option (google.api.http).get = "/umee/metoken/v1/params";
  }

  // Indexes queries for a specific or all the registered indexes.
  rpc Indexes(QueryIndexes)
      returns (QueryIndexesResponse) {
    option (google.api.http).get = "/umee/metoken/v1/indexes";
  }

  // SwapFee computes fee that would be applied when executing MsgSwap.
  rpc SwapFee(QuerySwapFee)
      returns (QuerySwapFeeResponse) {
    option (google.api.http).get = "/umee/metoken/v1/swap_fee";
  }

  // RedeemFee computes a fee that would be applied when executing MsgRedeem.
  rpc RedeemFee(QueryRedeemFee)
      returns (QueryRedeemFeeResponse) {
    option (google.api.http).get = "/umee/metoken/v1/redeem_fee";
  }

  // IndexBalances queries for Index's balances of a specific or all the registered indexes.
  rpc IndexBalances(QueryIndexBalances)
      returns (QueryIndexBalancesResponse) {
    option (google.api.http).get = "/umee/metoken/v1/index_balances";
  }

  // IndexPrices queries for Index's price of a specific or all the registered indexes. It also includes the
  // underlying assets prices as well as swap and redeem rates.
  rpc IndexPrices(QueryIndexPrices)
      returns (QueryIndexPricesResponse) {
    option (google.api.http).get = "/umee/metoken/v1/index_prices";
  }
}

// QueryParams defines the request structure for the Params gRPC service
// handler.
message QueryParams {}

// QueryParamsResponse defines the response structure for the Params gRPC
// service handler.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryIndexes defines the request structure for the Indexes gRPC service handler.
// metoken_denom param is optional, if it is not informed the query will return all the Indexes.
message QueryIndexes {
  string metoken_denom = 1;
}

// QueryIndexesResponse defines the response structure for the Indexes gRPC service handler.
message QueryIndexesResponse {
  repeated Index registry = 1 [(gogoproto.nullable) = false];
}

// QuerySwapFee defines the request structure for the SwapFee gRPC service handler.
message QuerySwapFee {
  string asset         = 1;
  string metoken_denom = 2;
}

// QuerySwapFeeResponse defines the response structure for the SwapFee gRPC service handler.
message QuerySwapFeeResponse {
  cosmos.base.v1beta1.Coin asset = 1 [(gogoproto.nullable) = false];
}

// QueryRedeemFee defines the request structure for the RedeemFee gRPC service handler.
message QueryRedeemFee {
  string metoken     = 1;
  string asset_denom = 2;
}

// QueryRedeemFeeResponse defines the response structure for the RedeemFee gRPC service handler.
message QueryRedeemFeeResponse {
  cosmos.base.v1beta1.Coin asset = 1 [(gogoproto.nullable) = false];
}

// QueryIndexBalances defines the request structure for the IndexBalances gRPC service handler.
// metoken_denom param is optional, if it is not informed the query will return all the Indexes.
message QueryIndexBalances {
  string metoken_denom = 1;
}

// QueryIndexBalanceResponse defines the response structure for the IndexBalances gRPC service handler.
message QueryIndexBalancesResponse {
  repeated IndexBalances index_balances = 1 [(gogoproto.nullable) = false];
  repeated IndexPrices   prices         = 2 [(gogoproto.nullable) = false];
}

// QueryIndexPrices defines the request structure for the IndexPrice gRPC service handler.
// metoken_denom param is optional, if it is not informed the query will return all the Index's prices.
message QueryIndexPrices {
  string metoken_denom = 1;
}

// QueryIndexPriceResponses defines the response structure for the IndexPrice gRPC service handler.
message QueryIndexPricesResponse {
  repeated IndexPrices prices = 1 [(gogoproto.nullable) = false];
}
