syntax = "proto3";
package umee.leverage.v1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "umee/leverage/v1/leverage.proto";

option go_package = "github.com/umee-network/umee/v3/x/leverage/types";

option (gogoproto.goproto_getters_all) = false;

message EventSupply {
  // Liquidity supplier bech32 address.
  string supplier = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Liquidity provided to the module.
  cosmos.base.v1beta1.Coin supplied = 2 [(gogoproto.nullable) = false];
  // uAsset received by the supplier in exchange for the
  // provided liquidity.
  cosmos.base.v1beta1.Coin uasset = 3 [(gogoproto.nullable) = false];
}

message EventWithdraw {
  // Liquidity supplier bech32 address.
  string supplier = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // uAsset sent to the module in exchange for the underlying asset.
  cosmos.base.v1beta1.Coin uasset = 2 [(gogoproto.nullable) = false];
  // Liquidity received by the supplier.
  cosmos.base.v1beta1.Coin asset = 3 [(gogoproto.nullable) = false];
}

message EventCollaterize {
  // Borrower bech32 address.
  string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // uAsset provided as a collateral.
  cosmos.base.v1beta1.Coin uasset = 2 [(gogoproto.nullable) = false];
}

message EventDecollaterize {
  // Borrower bech32 address.
  string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // uAsset removed from collateral.
  cosmos.base.v1beta1.Coin uasset = 2 [(gogoproto.nullable) = false];
}

message EventBorrow {
  // Borrower bech32 address.
  string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Asset borrowed.
  cosmos.base.v1beta1.Coin asset = 2 [(gogoproto.nullable) = false];
}

message EventRepay {
  // Borrower bech32 address.
  string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Asset repaid
  cosmos.base.v1beta1.Coin repaid = 2 [(gogoproto.nullable) = false];
}

message EventLiquidate {
  // Liquidator bech32 address.
  string liquidator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Borrower bech32 address.
  string borrower = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Assets liquidated from the borrower
  cosmos.base.v1beta1.Coin liquidated = 3 [(gogoproto.nullable) = false];
}

message EventInterestAccrual {
  uint64 block_height = 1;
  // Unix timestamp (in seconds)
  uint64 timestamp = 2;

  repeated cosmos.base.v1beta1.Coin total_interest = 3 [(gogoproto.nullable) = false];
  repeated cosmos.base.v1beta1.Coin reserved       = 4 [(gogoproto.nullable) = false];
}

message EventRepayBadDebt {
  // Borrower bech32 address.
  string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Asset repaid
  cosmos.base.v1beta1.Coin asset = 2 [(gogoproto.nullable) = false];
}

message EventReservesExhausted {
  // Borrower bech32 address.
  string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Outstanding bad debt
  cosmos.base.v1beta1.Coin outstanding_debt = 2 [(gogoproto.nullable) = false];
}

message EventFundOracle {
  // Assets sent to oracle module
  repeated cosmos.base.v1beta1.Coin assets = 1 [(gogoproto.nullable) = false];
}
