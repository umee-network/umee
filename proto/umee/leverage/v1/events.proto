syntax = "proto3";
package umee.leverage.v1;

import "google/api/annotations.proto";
import "umee/leverage/v1/leverage.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/umee-network/umee/v3/x/leverage/types";

option (gogoproto.goproto_getters_all) = false;

message EventSupply {
  // Liquidity supplier bech32 address.
  string supplier = 1;
  // Liquidity provided to the module.
  cosmos.base.v1beta1.Coin supplied = 2;
  // uAsset received by the supplier in exchange for the
  // provided liquidity.
  cosmos.base.v1beta1.Coin uasset = 3;
}

message EventWithdraw {
  // Liquidity supplier bech32 address.
  string supplier = 1;
  // uAsset sent to the module in exchange for the underlying asset.
  cosmos.base.v1beta1.Coin redeemed = 2;
  // Liquidity received by the supplier.
  cosmos.base.v1beta1.Coin asset = 3;
}

message EventCollaterize {
  // Borrower bech32 address.
  string borrower = 1;
  // Asset provided as a collateral.
  cosmos.base.v1beta1.Coin asset = 2;
}

message EventDecollaterize {
  // Borrower bech32 address.
  string borrower = 1;
  // Asset removed from collateral.
  cosmos.base.v1beta1.Coin asset = 2;
}

message EventBorrow {
  // string borrower = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // Borrower bech32 address.
  string borrower = 1;
  // Asset borrowed.
  cosmos.base.v1beta1.Coin asset = 2 [(gogoproto.nullable) = false];
}

message EventRepay {
  // Borrower bech32 address.
  string borrower = 1;
  // Asset repaid
  cosmos.base.v1beta1.Coin repaid = 2;
}

message EventLiquidate {
  // Liquidator bech32 address.
  string liquidator = 1;
  // Borrower bech32 address.
  string borrower = 2;
  // Assets liquidated from the borrower
  cosmos.base.v1beta1.Coin liquidated = 3;
}
