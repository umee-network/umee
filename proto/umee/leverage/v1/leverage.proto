syntax = "proto3";
package umee.leverage.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/umee-network/umee/v2/x/leverage/types";

// Params defines the parameters for the leverage module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  // The complete_liquidation_threshold determines how far over their borrow
  // limit a borrower must be in order for their positions to be liquidated
  // fully in a single event.
  string complete_liquidation_threshold = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"complete_liquidation_threshold\""
  ];
  // The minimum_close_factor determines the portion of a borrower's position
  // that can be liquidated in a single event, when the borrower is just barely
  // over their borrow limit.
  string minimum_close_factor = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"minimum_close_factor\""
  ];
  // The oracle_reward_factor determines the portion of interest accrued on
  // borrows that is sent to the oracle module to fund its reward pool.
  string oracle_reward_factor = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"oracle_reward_factor\""
  ];
  // The small_liquidation_size determines the USD value at which a borrow is
  // considered small enough to be liquidated in a single transaction, bypassing
  // dynamic close factor.
  string small_liquidation_size = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"small_liquidation_size\""
  ];
}

// Token defines a token, along with its capital metadata, in the Umee capital
// facility that can be loaned and borrowed.
message Token {
  option (gogoproto.equal) = true;

  // The base_denom defines the denomination of the underlying base token.
  string base_denom = 1 [(gogoproto.moretags) = "yaml:\"base_denom\""];

  // The reserve factor defines what portion of accrued interest of the asset
  // type goes to reserves.
  string reserve_factor = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"reserve_factor\""
  ];

  // The collateral_weight defines what amount of the total value of the asset
  // can contribute to a users borrowing power. If the collateral_weight is
  // zero, using this asset as collateral against borrowing will be disabled.
  string collateral_weight = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"collateral_weight\""
  ];

  // The liquidation_threshold defines what amount of the total value of the
  // asset can contribute to a user's liquidation threshold (above which they
  // become eligible for liquidation).
  string liquidation_threshold = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"liquidation_threshold\""
  ];

  // The base_borrow_rate defines the base interest rate for borrowing this
  // asset.
  string base_borrow_rate = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"base_borrow_rate\""
  ];

  // The kink_borrow_rate defines the interest rate for borrowing this
  // asset when utilization equals to 'kink_utilization'.
  string kink_borrow_rate = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"kink_borrow_rate\""
  ];

  // The max_borrow_rate defines the interest rate for borrowing this
  // asset (seen when utilization is 100%).
  string max_borrow_rate = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"max_borrow_rate\""
  ];

  // The kink_utilization defines the value where the kink rate kicks off for
  // borrow rates.
  string kink_utilization = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"kink_utilization\""
  ];

  // The liquidation_incentive determines the portion of bonus collateral of
  // a token type liquidators receive as a liquidation reward.
  string liquidation_incentive = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"liquidation_incentive\""
  ];

  // The symbol_denom and exponent are solely used to update the oracle's accept
  // list of allowed tokens.
  string symbol_denom = 10 [(gogoproto.moretags) = "yaml:\"symbol_denom\""];
  uint32 exponent     = 11 [(gogoproto.moretags) = "yaml:\"exponent\""];

  // Allows lending and setting a collateral using this token. Note that
  // withdrawing is always enabled. Disabling lending would be one step in
  // phasing out an asset type.
  bool enable_msg_lend = 12 [(gogoproto.moretags) = "yaml:\"enable_msg_lend\""];

  // Allows borrowing of this token. Note that repaying is always enabled.
  // Disabling borrowing would be one step in phasing out an asset type, but
  // could also be used from the start for asset types meant to be collateral
  // only, like meTokens.
  bool enable_msg_borrow = 13
      [(gogoproto.moretags) = "yaml:\"enable_msg_borrow\""];

  // This should only be used to eliminate an asset completely. A blacklisted
  // asset is treated as though its oracle price is zero, and thus ignored by
  // calculations such as collateral value and borrow limit. Can still be repaid
  // or withdrawn, but not liquidated. A blacklisted token must have enable_lend
  // and enable_borrow set to false. Such tokens can be safely removed from the
  // oracle and price feeder as well.
  bool blacklist = 14;
}
