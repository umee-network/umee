syntax = "proto3";
package umeenetwork.umee.leverage.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/umee-network/umee/x/leverage/types";

// Msg defines the x/leverage module's Msg service.
service Msg {
  // LendAsset defines a method for lending coins to the capital facility.
  rpc LendAsset(MsgLendAsset) returns (MsgLendAssetResponse);

  // WithdrawAsset defines a method for withdrawing previously lent coins from
  // the capital facility.
  rpc WithdrawAsset(MsgWithdrawAsset) returns (MsgWithdrawAssetResponse);
}

// MsgLendAsset represents a lender's request to lend a base asset type to the
// module
message MsgLendAsset {
  string                   lender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

// MsgWithdrawAsset represents a lender's request to withdraw a previously lent
// base asset type from the module
message MsgWithdrawAsset {
  string                   lender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

// MsgLendAssetResponse defines the Msg/Send response type.
message MsgLendAssetResponse {}

// MsgWithdrawAssetResponse defines the Msg/Send response type.
message MsgWithdrawAssetResponse {}
