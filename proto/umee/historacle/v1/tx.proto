syntax = "proto3";
package umee.historacle.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/umee-network/umee/v3/x/historacle/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the historacle Msg service.
service Msg {
  // StampPeriod defines the interface for which governance
  // can set the stamp period.
  rpc UpdateStampPeriod(MsgUpdateStampPeriod)
      returns (MsgUpdateStampPeriodResponse);
}

// MsgUpdateStampPeriod represents a message for governance to update the
// stamp period.
message MsgUpdateStampPeriod {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
  option (cosmos.msg.v1.signer) = "authority";

  string         authority    = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string         title        = 2 [(gogoproto.moretags) = "yaml:\"title\""];
  string         description  = 3 [(gogoproto.moretags) = "yaml:\"description\""];
  uint64         stamp_period = 4 [(gogoproto.moretags) = "yaml:\"stamp_period\""];
  uint64         prune_period = 5 [(gogoproto.moretags) = "yaml:\"prune_period\""];
}

// MsgUpdateStampPeriodResponse defines the
// Msg/UpdateStampPeriodResponse response type.
message MsgUpdateStampPeriodResponse {}
