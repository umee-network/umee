swagger: '2.0'
info:
  title: Umee SDK - gRPC Gateway docs
  description: A REST interface for state queries
  version: 1.0.0
paths:
  /umee/leverage/v1/account_balances:
    get:
      summary: >-
        AccountBalances queries an account's current supply, collateral, and
        borrow positions.
      operationId: AccountBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supplied:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Supplied contains all tokens the account has supplied,
                  including interest earned. It is denominated in base tokens,
                  so exponent from each coin's registered_tokens entry must be
                  applied to convert to symbol denom.
              collateral:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Collateral contains all uTokens the account has
                  collateralized. It is denominated in uTokens, so both exponent
                  and uToken exchange rate from each coin's market_summary must
                  be applied to convert to base token symbol denom.
              borrowed:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Borrowed contains all tokens the account has borrowed,
                  including interest owed. It is denominated in base tokens, so
                  exponent from each coin's registered_tokens entry must be
                  applied to convert to symbol denom.
            description: >-
              QueryAccountBalancesResponse defines the response structure for
              the AccountBalances gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/account_summary:
    get:
      summary: >-
        AccountSummary queries USD values representing an account's total
        positions and borrowing limits. It requires oracle prices to return
        successfully.
      operationId: AccountSummary
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supplied_value:
                type: string
                description: >-
                  Supplied Value is the sum of the USD value of all tokens the
                  account has supplied, including interest earned.

                  Computation skips assets which are missing oracle prices,
                  potentially resulting in a lower supplied

                  value than if prices were all available.
              collateral_value:
                type: string
                description: >-
                  Collateral Value is the sum of the USD value of all uTokens
                  the account has collateralized.

                  Computation skips collateral which is missing an oracle price,
                  potentially resulting in a lower collateral

                  value than if prices were all available.
              borrowed_value:
                type: string
                description: >-
                  Borrowed Value is the sum of the USD value of all tokens the
                  account has borrowed, including interest owed.

                  It always uses spot prices.

                  Computation skips borrows which are missing oracle prices,
                  potentially resulting in a lower borrowed

                  value than if prices were all available.
              borrow_limit:
                type: string
                description: >-
                  Borrow Limit is the maximum Borrowed Value the account is
                  allowed to reach through direct borrowing.

                  The lower of spot or historic price for each collateral token
                  is used when calculating borrow limits.

                  Computation skips collateral which is missing an oracle price,
                  potentially resulting in a lower borrow

                  limit than if prices were all available.
              liquidation_threshold:
                type: string
                description: >-
                  Liquidation Threshold is the Borrowed Value at which the
                  account becomes eligible for liquidation.

                  Will be null if an oracle price required for computation is
                  missing.
            description: >-
              QueryAccountSummaryResponse defines the response structure for the
              AccountSummary gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/bad_debts:
    get:
      summary: >-
        BadDebts queries a list of borrow positions that have been marked for
        bad debt repayment.
      operationId: BadDebts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              targets:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    denom:
                      type: string
                  description: >-
                    BadDebt is a bad debt instance used in the leverage module's
                    genesis state.
                description: >-
                  Targets are borrow positions currently marked for bad debt
                  repayment. Each contains an Address and a Denom.
            description: >-
              QueryBadDebtsResponse defines the response structure for the
              BedDebts gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/leverage/v1/inspect:
    get:
      summary: >-
        Inspect is the customizable inspector query. It returns a list of all
        borrowers,

        starting from the highest borrowed value, filtered by any combination
        of: minimum

        borrowed value (optionally of a specified token), minimum collateral
        value, minimum

        progress toward liquidation threshold, and minimum LTV. Each account is
        displayed

        with its address and borrowed/liquidation/collateral USD values, as well
        as its

        actual token positions in human-readable symbol denoms instead of
        uTokens or ibc denoms.
      operationId: Inspect
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              borrowers:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      title: Address of a borrower
                    analysis:
                      description: >-
                        USD totals of borrower's collateral, debt, and
                        liquidation threshold.
                      type: object
                      properties:
                        Borrowed:
                          type: number
                          format: double
                          description: Borrowed is account's borrowed value in USD.
                        Liquidation:
                          type: number
                          format: double
                          description: >-
                            Liquidation is account's liquidation threshold in
                            USD.
                        Value:
                          type: number
                          format: double
                          description: Value is account's collateral value in USD.
                    position:
                      description: >-
                        Collateral and borrowed tokens, denoted in
                        human-readable symbol denom instead of ibc denom.
                      type: object
                      properties:
                        collateral:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              DecCoin defines a token with a denomination and a
                              decimal amount.


                              NOTE: The amount field is an Dec which implements
                              the custom method

                              signatures required by gogoproto.
                          description: >-
                            Collateral contains all uTokens the account has
                            collateralized. It has been converted from uTokens
                            to tokens.
                        borrowed:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              DecCoin defines a token with a denomination and a
                              decimal amount.


                              NOTE: The amount field is an Dec which implements
                              the custom method

                              signatures required by gogoproto.
                          description: >-
                            Borrowed contains all tokens the account has
                            borrowed, including interest owed.
                  description: >-
                    InspectAccount contains risk and balance info for a single
                    account for the inspector query.
            description: >-
              QueryInspectResponse defines the response structure for the
              Inspect gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: symbol
          description: >-
            Symbol selects a symbol denom to sort accounts by borrowed value.
            Use "all" or empty string to show all.
          in: query
          required: false
          type: string
        - name: borrowed
          description: >-
            Borrowed is the minimum USD value an account must have borrowed to
            show. Use 0 to show all.
          in: query
          required: false
          type: number
          format: double
        - name: collateral
          description: >-
            Collateral is the minimum USD value of collateral an account must
            have to show. Use 0 to show all.
          in: query
          required: false
          type: number
          format: double
        - name: danger
          description: >-
            Danger is the minimum progress toward liquidation an account must
            have to show. Use 0 to show all.

            Measured as the ratio (borrowed value / liquidation threshold),
            where > 1 is liquidation-eligible.
          in: query
          required: false
          type: number
          format: double
        - name: ltv
          description: >-
            LTV is the minimum ratio (borrowed value / collateral value) an
            account must have to show. Use 0 to show all.
          in: query
          required: false
          type: number
          format: double
      tags:
        - Query
  /umee/leverage/v1/liquidation_targets:
    get:
      summary: >-
        LiquidationTargets queries a list of all borrower account addresses
        eligible for liquidation.
      operationId: LiquidationTargets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              targets:
                type: array
                items:
                  type: string
                description: >-
                  Targets are the addresses of borrowers eligible for
                  liquidation.
            description: >-
              QueryLiquidationTargetsResponse defines the response structure for
              the LiquidationTargets gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/leverage/v1/market_summary:
    get:
      summary: >-
        MarketSummary queries a base asset's current borrowing and supplying
        conditions.
      operationId: MarketSummary
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              symbol_denom:
                type: string
                description: >-
                  Symbol Denom is the human-readable representation of a token
                  denom, for example "UMEE" or "ATOM".
              exponent:
                type: integer
                format: int64
                description: >-
                  Exponent is the power of ten required to get from base denom
                  to symbol denom. For example, an exponent of 6 means 10^6
                  uumee = 1 UMEE.
              oracle_price:
                type: string
                description: >-
                  Oracle Price is the current USD value of a token. Oracle price
                  is nil when the oracle is down.
              uToken_exchange_rate:
                type: string
                description: >-
                  uToken Exchange Rate is the amount of base tokens received
                  when withdrawing 1 uToken. For example, a uToken exchange rate
                  of 1.5 means a supplier receives 3 uumee for every 2 u/uumee
                  they wish to withdraw. The same applies in reverse: supplying
                  3 uumee would award 2 u/uumee at that time.
              supply_APY:
                type: string
                description: >-
                  Supply APY is the current interest rate suppliers are
                  receiving for their deposits. For example, 0.11 would mean 11%
                  APY. Supply APY is always less than borrow APY.
              borrow_APY:
                type: string
                description: >-
                  Borrow APY is the current interest rate borrowers are being
                  charged on their loans. For example, 0.2 would mean 20% APY.
              supplied:
                type: string
                description: >-
                  Supplied is the total amount of tokens supplied to the the
                  system by all suppliers, including any interest earned. This
                  includes that tokens which have been borrowed out or enabled
                  as collateral, but excludes reserves. Supplied is denominated
                  in base tokens, so exponent must be applied to convert to
                  symbol denom.
              reserved:
                type: string
                description: >-
                  Reserved is the total amount of tokens held in reserve by the
                  module for emergencies. Reserves are always excluded from
                  total supply, borrow, collateral, and liqduidity queries.
                  Reserves are denominated in base tokens, so exponent must be
                  applied to convert to symbol denom.
              collateral:
                type: string
                description: >-
                  Collateral is the total amount of uTokens collateralized by
                  all borrowers. Collateral is denominated in uTokenso, so both
                  uToken exchange rate and exponent must also be applied to
                  convert to symbol denom. For example, if collateral is 4000000
                  u/uumee and uToken exchange rate is 1.2, then 5 UMEE have been
                  collateralized.
              borrowed:
                type: string
                description: >-
                  Borrowed is the total amount of debt in this token held across
                  all borrowers. It is denominated in base tokens, so exponent
                  must be applied to convert to symbol denom.
              liquidity:
                type: string
                description: >-
                  Liquidity is the amount of a token that has been supplied but
                  not yet borrowed or reserved. It is denominated in base
                  tokens, so exponent must be applied to convert to symbol
                  denom.
              maximum_borrow:
                type: string
                description: >-
                  Maximum Borrow is the amount of a token that is available for
                  borrowing, including that which has already been borrowed out.
                  This amount is less than total supply due to safety limits. It
                  is denominated in base tokens, so exponent must be applied to
                  convert to symbol denom. For example, if borrowed is 3000000
                  uumee and maximum borrow is 4000000 uumee, then 1 UMEE is
                  currently available for borrowing.
              maximum_collateral:
                type: string
                description: >-
                  Maximum Collateral is the amount of a token that can be
                  collateralized, including that which is already collateral.
                  This amount is less than total supply due to safety limits. It
                  is denominated in uTokens, so both uToken exchange rate and
                  exponent must be applied to convert to symbol denom. For
                  example, if collateral is 4000000 u/uumee, uToken exchange
                  rate is 1.2, and maximum borrow is 7000000 uumee, then a
                  maximum of 2 additional UMEE is permitted to be
                  collateralized.
              minimum_liquidity:
                type: string
                description: >-
                  Minimum Liquidity is the minimum amount of liquidity in the
                  module required by safety limits, based on the current
                  collateral. It is denominated in base tokens, so exponent must
                  be applied to convert to symbol denom. For example, if
                  liquidity is 9000000 uumee and minimum liquidity is 8000000
                  uumee, then a maximum of 1 additional UMEE is currently
                  available for borrowing or withdrawal.
              uToken_supply:
                type: string
                description: >-
                  uToken Supply is the total amount of a base token's associated
                  uToken in circulation.
              available_borrow:
                type: string
                description: >-
                  Available Borrow is the maximum additional amount of base
                  tokens than can be borrowed based on current liquidity and
                  system safety limits. It can also be calculated by
                  MIN(maximum_borrow - borrowed, liquidity - minimum_liquidity).
                  It is denominated in base tokens, so exponent must be applied
                  to convert to symbol denom. A negative availability means
                  safety limits have been exceeded and borrowing is temporarily
                  unavailable.
              available_withdraw:
                type: string
                description: >-
                  Available Withdraw is the maximum amount of uTokens than can
                  currently be withdrawn based on liquidity and system safety
                  limits. It can also be calculated by (liquidity -
                  minimum_liquidity). It is denominated in uTokens, so both
                  uToken exchange rate and exponent must be applied to convert
                  to symbol denom. A negative availability means safety limits
                  have been exceeded and withdrawal is temporarily unavailable.
              available_collateralize:
                type: string
                description: >-
                  Available Collateralize is the maximum additional amount of
                  uTokens than can be collateralized based on current liquidity
                  and system safety limits. It can also be calculated by
                  (maximum_collateral, - collateral). It is denominated in
                  uTokens, so both uToken exchange rate and exponent must be
                  applied to convert to symbol denom. A negative availability
                  means safety limits have been exceeded and additional
                  collateral cannot be created until more liquidity is present.
              oracle_historic_price:
                type: string
                description: >-
                  Oracle Historic Price is the historic USD value of a token.
                  Historic price is defined as the median of the last N historic
                  median prices from the oracle module, with N being this
                  token's HistoricMedians in the leverage registry. Current
                  price is used if required medians is zero. Price is nil when
                  the oracle is down or insufficient historic medians are
                  available.
              errors:
                type: string
            description: >-
              QueryMarketSummaryResponse defines the response structure for the
              MarketSummary gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/max_borrow:
    get:
      summary: >-
        MaxBorrow queries the maximum amount of a given token an address can
        borrow.
      operationId: MaxBorrow
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tokens:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: Tokens is the maximum amount of tokens that can be borrowed
            description: >-
              QueryMaxBorrowResponse defines the response structure for the
              MaxBorrow gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
        - name: denom
          description: |-
            denom is the base token denom to borrow.
            empty denom will query all registered tokens.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/max_withdraw:
    get:
      summary: >-
        MaxWithdraw queries the maximum amount of a given token an address can
        withdraw.
      operationId: MaxWithdraw
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              uTokens:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: uTokens is the maximum amount of uTokens that can be withdrawn
              tokens:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: >-
                  Tokens is the equivalent of max uTokens converted to base
                  tokens
            description: >-
              QueryMaxWithdrawResponse defines the response structure for the
              MaxWithdraw gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
        - name: denom
          description: >-
            denom is the base token denom associated with the uToken to
            withdraw.

            empty denom will query all registered tokens.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/params:
    get:
      summary: Params queries the parameters of the x/leverage module.
      operationId: LeverageParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  complete_liquidation_threshold:
                    type: string
                    description: >-
                      Complete Liquidation Threshold determines how far between

                      liquidation_threshold (LT) and collateral_value (CV) a
                      borrower's

                      borrowed value must have progressed in order to allow a
                      full liquidation.

                      0.3 indicates 30% of the way from LT to CV.

                      See also `minimum_close_factor` for more information.

                      Valid values: 0-1.
                  minimum_close_factor:
                    type: string
                    description: |-
                      borrowed          CV := collateral
                                  value                   value
                       --- | ------- | ----- | -------- | ------->
                          LV                 CL

                      LV = liquidation value = liquidation_threshold * CV
                      CL = LV + (CV-LV) * complete_liquidation_threshold
                         is the borrowed value above which close factor will be 1.

                      Valid values: 0-1.
                    title: >-
                      Close Factor determines the portion of a borrower's
                      position that can be

                      liquidated in a single event. Minimum Close Factor is
                      Close Factor at

                      liquidation_threshold. 0.1 means that that 10% of the
                      borrower position can

                      be liquidated when the borrowed value passes the
                      liquidation_threshold.

                      close_factor scales linearly between minimum_close_factor
                      and 1.0,

                      reaching its maximum when borrowed value passes

                      complete_liquidation_threshold. We can put it into the
                      picture:
                  oracle_reward_factor:
                    type: string
                    description: >-
                      Oracle Reward Factor determines the portion of interest
                      accrued on

                      borrows that is sent to the oracle module to fund its
                      reward pool.

                      Valid values: 0-1.
                  small_liquidation_size:
                    type: string
                    description: >-
                      Small Liquidation Size determines the USD value at which a
                      borrow is

                      considered small enough to be liquidated in a single
                      transaction, bypassing

                      dynamic close factor.
                  direct_liquidation_fee:
                    type: string
                    description: >-
                      Direct Liquidation Fee is a reduction factor in
                      liquidation incentive

                      experienced by liquidators who choose to receive base
                      assets instead of

                      uTokens as liquidation rewards.

                      Valid values: 0-1.
                description: >-
                  Params defines the parameters for the leverage module.

                  See
                  https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md

                  for more details.
            description: >-
              QueryParamsResponse defines the response structure for the Params
              gRPC

              service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/leverage/v1/registered_tokens:
    get:
      summary: RegisteredTokens queries for all the registered tokens.
      operationId: RegisteredTokens
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              registry:
                type: array
                items:
                  type: object
                  properties:
                    base_denom:
                      type: string
                      description: >-
                        Base Denom is the denomination of the underlying base
                        token. Must be the base

                        denom as registered in the Bank module (so IBC denom for
                        IBC tokens).
                    reserve_factor:
                      type: string
                      description: >-
                        Reserve Factor defines what portion of accrued interest
                        goes to reserves

                        when this token is borrowed.

                        Valid values: 0-1.
                    collateral_weight:
                      type: string
                      description: >-
                        Collateral Weight defines what portion of the total
                        value of the asset

                        can contribute to a users borrowing power. If the
                        collateral weight is

                        zero, using this asset as collateral against borrowing
                        will be disabled.

                        Must be smaller than `liquidation_threshold`.

                        Valid values: 0-1.
                    liquidation_threshold:
                      type: string
                      description: >-
                        Liquidation Threshold defines what amount of the total
                        value of the

                        asset as a collateral can contribute to a user's
                        liquidation threshold

                        (above which they become eligible for liquidation).

                        Must be bigger than `collateral_weight`.

                        Valid values: 0-1.

                        See also: min_close_factor.
                    base_borrow_rate:
                      type: string
                      title: >-
                        Base Borrow Rate defines the minimum interest rate for
                        borrowing this

                        asset.

                        Valid values: 0-∞
                    kink_borrow_rate:
                      type: string
                      title: >-
                        Kink Borrow Rate defines the interest rate for borrowing
                        this

                        asset when supply utilization is equal to
                        'kink_utilization'.

                        Valid values: 0-∞
                    max_borrow_rate:
                      type: string
                      title: >-
                        Max Borrow Rate defines the interest rate for borrowing
                        this

                        asset when supply utilization is at its maximum.

                        Valid values: 0-∞
                    kink_utilization:
                      type: string
                      description: >-
                        Kink Utilization defines the supply utilization value
                        where

                        the kink in the borrow interest rate function occurs.

                        Valid values: 0-1.
                    liquidation_incentive:
                      type: string
                      description: >-
                        Liquidation Incentive determines the portion of bonus
                        collateral of

                        a token type liquidators receive as a liquidation
                        reward.

                        Valid values: 0-1.
                    symbol_denom:
                      type: string
                      description: >-
                        Symbol Denom is the human readable denomination of this
                        token.
                    exponent:
                      type: integer
                      format: int64
                      description: >-
                        Exponent is the power of ten by which to multiply, in
                        order to convert

                        an amount of the token denoted in its symbol denom to
                        the actual amount

                        of its base denom.
                    enable_msg_supply:
                      type: boolean
                      description: >-
                        Enable Msg Supply allows supplying for lending or
                        collateral using this

                        token. `false` means that a token can no longer be
                        supplied.

                        Note that withdrawing is always enabled. Disabling
                        supply would

                        be one step in phasing out an asset type.
                    enable_msg_borrow:
                      type: boolean
                      description: >-
                        Enable Msg Borrow allows borrowing of this token. Note
                        that repaying is

                        always enabled. Disabling borrowing would be one step in
                        phasing out an

                        asset type, but could also be used from the start for
                        asset types meant

                        to be collateral only, like meTokens.
                    blacklist:
                      type: boolean
                      description: >-
                        Blacklist should only be used to eliminate an asset
                        completely. A blacklisted

                        asset is treated as though its oracle price is zero, and
                        thus ignored by

                        calculations such as collateral value and borrow limit.
                        Can still be repaid

                        or withdrawn, but not liquidated. A blacklisted token
                        must have enable_msg_supply

                        and enable_msg_borrow set to false. Such tokens can be
                        safely removed from the

                        oracle and price feeder as well.
                    max_collateral_share:
                      type: string
                      description: >-
                        Max Collateral Share specifies how much of the system's
                        overall collateral

                        can be provided by a given token. 1.0 means that the
                        token has no restriction.

                        0.1 means maximum 10% of system's total collateral value
                        can be provided by this token.

                        Valid values: 0-1.
                    max_supply_utilization:
                      type: string
                      description: >-
                        Max Supply Utilization specifies the maximum supply
                        utilization a token is

                        allowed to reach as a direct result of user borrowing.
                        New borrows are not allowed when

                        the supply utilization is above
                        `max_supply_utilization`.
                           supply_utilization(token) = total_borrowed(token) / total_supply(token)
                        Valid values: 0-1.
                    min_collateral_liquidity:
                      type: string
                      title: >-
                        Min Collateral Liquidity specifies min limit for the
                        following function:
                           collateral_liquidity(token) = available(token) / total_collateral(token)
                        Borrowing, collateralizing, or withdrawing assets is not
                        allowed when the

                        result of such action invalidates
                        min_collateral_liquidity.

                        Liquidity can only drop below this value due to interest
                        or liquidations.

                        The goal is to assure that there is enough available
                        (not borrowed) token to be available

                        for withdraw when there is a collateral liquidation and
                        the liquidator needs to

                        withdraw uToken.

                        Valid values: 0 - inf
                    max_supply:
                      type: string
                      description: >-
                        Max Supply is the maximum amount of tokens the protocol
                        can hold.

                        Adding more supply of the given token to the protocol
                        will return an error.

                        Must be a non negative value. 0 means that there is no
                        limit.

                        To mark a token as not valid for supply, `msg_supply`
                        must be set to false.
                    historic_medians:
                      type: integer
                      format: int64
                      description: >-
                        Historic Medians is the number of median historic prices
                        to request from

                        the oracle module when evaluating new borrow positions
                        containing this token.

                        All MsgBorrow, MsgWithdraw, and MsgDecollateralize must
                        result in healthy

                        borrow positions under both current and historic prices.
                        The default value of

                        zero for this field causes current price to be used in
                        those calculations

                        for the affected Token.

                        The time span covered by the historic median will be:
                            oracle.Params.median_stamp_period * oracle.Params.historic_stamp_period * historic_medians.
                  description: >-
                    Token defines a token, along with its metadata and
                    parameters, in the Umee

                    capital facility that can be supplied and borrowed.

                    See
                    https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md

                    for more details.
            description: >-
              QueryRegisteredTokensResponse defines the response structure for
              the

              RegisteredTokens gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: base_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/historacle/v1/avg_price/{denom}:
    get:
      summary: QueryAvgPrice returns avg price of a given denom (required).
      operationId: AvgPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price:
                type: string
            title: QueryAvgPriceResponse is a response type for AvgPrice method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/historacle/v1/denoms/median_deviations:
    get:
      summary: |-
        MedianDeviations returns median deviations of all denoms,
        or, if specified, returns a single median deviation
      operationId: MedianDeviations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              medianDeviations:
                type: array
                items:
                  type: object
                  properties:
                    exchange_rate_tuple:
                      type: object
                      properties:
                        denom:
                          type: string
                        exchange_rate:
                          type: string
                      title: >-
                        ExchangeRateTuple - struct to store interpreted exchange
                        rates data to store
                    block_num:
                      type: string
                      format: uint64
                  title: Price is an instance of a price "stamp"
                description: >-
                  medians defines a list of the median deviations for all
                  stamped denoms.
            description: |-
              QueryMedianDeviationsResponse is response type for the
              Query/MedianDeviations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom defines the denomination to query for.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/historacle/v1/denoms/medians:
    get:
      summary: |-
        Medians returns medians of all denoms,
        or, if specified, returns a single median
      operationId: Medians
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              medians:
                type: array
                items:
                  type: object
                  properties:
                    exchange_rate_tuple:
                      type: object
                      properties:
                        denom:
                          type: string
                        exchange_rate:
                          type: string
                      title: >-
                        ExchangeRateTuple - struct to store interpreted exchange
                        rates data to store
                    block_num:
                      type: string
                      format: uint64
                  title: Price is an instance of a price "stamp"
                description: medians defines a list of the medians for all stamped denoms.
            description: |-
              QueryMediansResponse is response type for the
              Query/Medians RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom defines the denomination to query for.
          in: query
          required: false
          type: string
        - name: numStamps
          description: >-
            numStamps defines the number of median stamps to query for.
            numStamps

            must be greater than 0.
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Query
  /umee/oracle/v1/denoms/active_exchange_rates:
    get:
      summary: ActiveExchangeRates returns all active denoms
      operationId: ActiveExchangeRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              active_rates:
                type: array
                items:
                  type: string
                description: >-
                  activeRates defines a list of the denomination which oracle
                  prices agreed

                  upon.
            description: |-
              QueryActiveExchangeRatesResponse is response type for the
              Query/ActiveExchangeRates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/denoms/exchange_rates/{denom}:
    get:
      summary: |-
        ExchangeRates returns exchange rates of all denoms,
        or, if specified, returns a single denom
      operationId: ExchangeRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              exchange_rates:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  exchange_rates defines a list of the exchange rate for all
                  whitelisted

                  denoms.
            description: |-
              QueryExchangeRatesResponse is response type for the
              Query/ExchangeRates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom defines the denomination to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/params:
    get:
      summary: Params queries all parameters.
      operationId: OracleParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  vote_period:
                    type: string
                    format: uint64
                  vote_threshold:
                    type: string
                  reward_band:
                    type: string
                  reward_distribution_window:
                    type: string
                    format: uint64
                  accept_list:
                    type: array
                    items:
                      type: object
                      properties:
                        base_denom:
                          type: string
                        symbol_denom:
                          type: string
                        exponent:
                          type: integer
                          format: int64
                      title: Denom - the object to hold configurations of each denom
                  slash_fraction:
                    type: string
                  slash_window:
                    type: string
                    format: uint64
                  min_valid_per_window:
                    type: string
                  historic_stamp_period:
                    type: string
                    format: uint64
                    description: >-
                      Historic Stamp Period represents the amount of blocks the
                      oracle

                      module waits before recording a new historic price.
                  median_stamp_period:
                    type: string
                    format: uint64
                    description: >-
                      Median Stamp Period represents the amount blocks the
                      oracle module

                      waits between calculating and stamping a new median and
                      standard

                      deviation of that median.
                  maximum_price_stamps:
                    type: string
                    format: uint64
                    description: >-
                      Maximum Price Stamps represents the maximum amount of
                      historic prices

                      the oracle module will store before pruning via FIFO.
                  maximum_median_stamps:
                    type: string
                    format: uint64
                    description: >-
                      Maximum Median Stamps represents the maximum amount of
                      medians the

                      oracle module will store before pruning via FIFO.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/slash_window:
    get:
      summary: SlashWindow returns slash window information
      operationId: SlashWindow
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              window_progress:
                type: string
                format: uint64
                description: |-
                  window_progress defines the number of voting periods
                  since the last slashing event would have taken place.
            description: |-
              QuerySlashWindowResponse is response type for the
              Query/SlashWindow RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/valdiators/{validator_addr}/aggregate_vote:
    get:
      summary: AggregateVote returns an aggregate vote of a validator
      operationId: AggregateVote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_vote:
                title: >-
                  aggregate_vote defines oracle aggregate vote submitted by a
                  validator in

                  the current vote period
                type: object
                properties:
                  exchange_rate_tuples:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        exchange_rate:
                          type: string
                      title: >-
                        ExchangeRateTuple - struct to store interpreted exchange
                        rates data to store
                  voter:
                    type: string
                description: |-
                  AggregateExchangeRateVote - struct for voting on
                  the exchange rates of USD denominated in various assets.
            description: |-
              QueryAggregateVoteResponse is response type for the
              Query/AggregateVote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/validators/aggregate_prevotes:
    get:
      summary: AggregatePrevotes returns aggregate prevotes of all validators
      operationId: AggregatePrevotes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_prevotes:
                type: array
                items:
                  type: object
                  properties:
                    hash:
                      type: string
                    voter:
                      type: string
                    submit_block:
                      type: string
                      format: uint64
                  title: >-
                    AggregateExchangeRatePrevote -

                    struct for aggregate prevoting on the ExchangeRateVote.

                    The purpose of aggregate prevote is to hide vote exchange
                    rates with hash

                    which is formatted as hex string in SHA256("{salt}:{exchange

                    rate}{denom},...,{exchange rate}{denom}:{voter}")
                title: >-
                  aggregate_prevotes defines all oracle aggregate prevotes
                  submitted in the

                  current vote period
            description: |-
              QueryAggregatePrevotesResponse is response type for the
              Query/AggregatePrevotes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/validators/aggregate_votes:
    get:
      summary: AggregateVotes returns aggregate votes of all validators
      operationId: AggregateVotes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_votes:
                type: array
                items:
                  type: object
                  properties:
                    exchange_rate_tuples:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          exchange_rate:
                            type: string
                        title: >-
                          ExchangeRateTuple - struct to store interpreted
                          exchange rates data to store
                    voter:
                      type: string
                  description: |-
                    AggregateExchangeRateVote - struct for voting on
                    the exchange rates of USD denominated in various assets.
                title: >-
                  aggregate_votes defines all oracle aggregate votes submitted
                  in the current

                  vote period
            description: |-
              QueryAggregateVotesResponse is response type for the
              Query/AggregateVotes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/validators/{validator_addr}/aggregate_prevote:
    get:
      summary: AggregatePrevote returns an aggregate prevote of a validator
      operationId: AggregatePrevote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_prevote:
                type: object
                properties:
                  hash:
                    type: string
                  voter:
                    type: string
                  submit_block:
                    type: string
                    format: uint64
                title: >-
                  AggregateExchangeRatePrevote -

                  struct for aggregate prevoting on the ExchangeRateVote.

                  The purpose of aggregate prevote is to hide vote exchange
                  rates with hash

                  which is formatted as hex string in SHA256("{salt}:{exchange

                  rate}{denom},...,{exchange rate}{denom}:{voter}")
            description: |-
              QueryAggregatePrevoteResponse is response type for the
              Query/AggregatePrevote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/validators/{validator_addr}/feeder:
    get:
      summary: FeederDelegation returns feeder delegation of a validator
      operationId: FeederDelegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              feeder_addr:
                type: string
                title: feeder_addr defines the feeder delegation of a validator
            description: |-
              QueryFeederDelegationResponse is response type for the
              Query/FeederDelegation RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/validators/{validator_addr}/miss:
    get:
      summary: MissCounter returns oracle miss counter of a validator
      operationId: MissCounter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              miss_counter:
                type: string
                format: uint64
                title: miss_counter defines the oracle miss counter of a validator
            description: |-
              QueryMissCounterResponse is response type for the
              Query/MissCounter RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/uibc/v1/all_outflows:
    get:
      summary: AllOutflow returns outflows for each denom in the current quota period.
      operationId: AllOutflows
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              outflows:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
            title: QueryOutflowResponse defines response type of Query/Outflow
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/uibc/v1/outflows:
    get:
      summary: |-
        Outflow returns IBC denom outflows in the current quota period.
        If denom is not specified, returns sum of all registered outflows.
      operationId: Outflows
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: string
            title: QueryOutflowResponse defines response type of Query/Outflow
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/uibc/v1/params:
    get:
      summary: Params queries the parameters of the x/uibc module.
      operationId: UIBCParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  ibc_status:
                    description: >-
                      ibc_status defines the IBC ICS20 status (transfer quota or
                      transfers disabled).
                    type: string
                    enum:
                      - IBC_TRANSFER_STATUS_UNSPECIFIED
                      - IBC_TRANSFER_STATUS_QUOTA_DISABLED
                      - IBC_TRANSFER_STATUS_QUOTA_ENABLED
                      - IBC_TRANSFER_STATUS_QUOTA_OUT_DISABLED
                      - IBC_TRANSFER_STATUS_QUOTA_IN_DISABLED
                      - IBC_TRANSFER_STATUS_TRANSFERS_PAUSED
                    default: IBC_TRANSFER_STATUS_UNSPECIFIED
                    title: >-
                      IBCTransferStatus status of ibc-transfer quota check for
                      inflow and outflow
                  total_quota:
                    type: string
                    title: >-
                      total_quota defines the total outflow limit of
                      ibc-transfer in USD
                  token_quota:
                    type: string
                    title: token_quota defines the outflow limit per token in USD
                  quota_duration:
                    type: string
                    title: >-
                      quota_duration defines quota expires for each ibc-transfer
                      denom in seconds
                title: Params of x/uibc module
            description: >-
              QueryParamsResponse defines the response structure for the Params
              gRPC

              service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/ugov/v1/emergency_group:
    get:
      summary: EmergencyGroup returns emergency group address
      operationId: EmergencyGroup
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              emergency_group:
                type: string
            description: QueryEmergencyGroupResponse response type.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/ugov/v1/inflation_cycle_end:
    get:
      summary: InflationCycleEnd returns inflation cycle end time
      operationId: InflationCycleEnd
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              end:
                type: string
                format: date-time
            description: QueryInflationCycleEndResponse response type.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/ugov/v1/inflation_params:
    get:
      summary: InflationParams returns params of inflation reduction rates
      operationId: InflationParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  max_supply:
                    description: max_supply is the maximum supply for liquidation.
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                  inflation_cycle:
                    type: string
                    description: >-
                      inflation_cycle duration after which inflation rates are
                      changed.
                  inflation_reduction_rate:
                    type: integer
                    format: int64
                    description: inflation_reduction_rate for every inflation cycle.
                description: >-
                  InflationParams params for changing the inflation min rate and
                  max rate of mint module params.
            description: QueryInflationParamsResponse response type.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/ugov/v1/min_gas_price:
    get:
      summary: MinGasPrice returns minimum transaction fees.
      operationId: MinGasPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              min_gas_price:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            description: QueryMinGasPriceResponse response type.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/incentive/v1/account_bonds/{address}:
    get:
      summary: >-
        AccountBonds queries all bonded collateral and unbondings associated
        with an account.
      operationId: AccountBonds
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bonded:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
              unbonding:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
              unbondings:
                type: array
                items:
                  type: object
                  properties:
                    start:
                      type: string
                      format: int64
                    end:
                      type: string
                      format: int64
                    uToken:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    Unbonding is a structure that tracks an in-progress token
                    unbonding.

                    It tracks both its start time and end time, so that if the
                    module's

                    unbonding time changes, the unbonding can complete at the
                    earlier of

                    its original end time or its new one based on the new
                    parameter.
            description: >-
              QueryAccountBondsResponse defines the response structure for the
              AccountBonds gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/incentive/v1/actual_rates:
    get:
      summary: >-
        ActualRates queries the hypothetical return of a bonded uToken
        denomination

        if current incentive rewards continued for one year. The response is an
        sdk.Dec

        representing an oracle-adjusted APY.
      operationId: ActualRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              APY:
                type: string
                description: APY is the oracle price-adjusted APY of the bonded uToken.
            description: >-
              QueryActualRatesResponse defines the response structure for the
              ActualRates gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: uToken
          description: >-
            uToken is the uToken denomination whose current annual rate of
            rewards is being queried.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/incentive/v1/current_rates:
    get:
      summary: >-
        CurrentRates queries the hypothetical return of a bonded uToken
        denomination

        if current incentive rewards continued for one year. The response is an
        sdk.Coins

        of base token rewards, per reference amount (usually 10^exponent of the
        uToken.)
      operationId: CurrentRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              reference_bond:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Rewards are the amount of base token rewards that the
                  reference amount of bonded uTokens would earn

                  if current rates continued for a full year.
            description: >-
              QueryCurrentRatesResponse defines the response structure for the
              CurrentRates gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: uToken
          description: >-
            uToken is the uToken denomination whose current annual rate of
            rewards is being queried.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/incentive/v1/last_reward_time:
    get:
      summary: >-
        LastRewardTime queries the last block time at which incentive rewards
        were calculated.
      operationId: LastRewardTime
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              time:
                type: string
                format: int64
            description: >-
              QueryLastRewardTimeResponse defines the response structure for the
              LastRewardTime gRPC

              service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/incentive/v1/params:
    get:
      summary: Params queries the parameters of the x/incentive module.
      operationId: IncentiveParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  max_unbondings:
                    type: integer
                    format: int64
                    description: >-
                      max_unbondings is the maximum amount of concurrent
                      unbondings an address can have

                      of each bonded uToken denom. Zero is interpreted as no
                      limit.
                  unbonding_duration:
                    type: string
                    format: int64
                    description: unbonding_duration is the unbonding duration (in seconds).
                  emergency_unbond_fee:
                    type: string
                    description: >-
                      emergency_unbond_fee is the portion of a bond that is paid
                      when it is instantly

                      released using MsgEmergencyUnbond. For example, 0.01 is a
                      1% fee. Ranges 0-1.
                description: Params defines the parameters for the incentive module.
            description: >-
              QueryParamsResponse defines the response structure for the Params
              gRPC

              service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/incentive/v1/pending_rewards/{address}:
    get:
      summary: >-
        PendingRewards queries unclaimed incentive rewards associated with an
        account.
      operationId: PendingRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryPendingRewardsResponse defines the response structure for the
              PendingRewards gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/incentive/v1/program/{id}:
    get:
      summary: IncentiveProgram queries a single incentive program by ID.
      operationId: IncentiveProgram
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              program:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int64
                    description: >-
                      ID uniquely identifies the incentive program after it has
                      been created.

                      It is zero when the program is being proposed by
                      governance, and is set

                      to its final value when the proposal passes.
                  start_time:
                    type: string
                    format: int64
                    description: >-
                      start_time is the unix time (in seconds) at which the
                      incentives begin.

                      If a program is passed after its intended start time, its
                      start time

                      will be increased to the current time, with program
                      duration unchanged.
                  duration:
                    type: string
                    format: int64
                    description: >-
                      duration is the length of the incentive program from start
                      time to

                      completion in seconds.
                  uToken:
                    type: string
                    description: >-
                      uToken is the incentivized uToken collateral denom.
                      Suppliers who collateralize

                      this asset then bond it to the incentive module are
                      eligible for this program's

                      rewards.
                  funded:
                    type: boolean
                    description: >-
                      funded indicates whether a program bas been funded. This
                      can happen when

                      a program passes if funding from community fund, or any
                      time before the

                      program's start time if funding with MsgSponsor. A program
                      that reaches

                      its start time without being funded is cancelled.
                  total_rewards:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  remaining_rewards:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                description: >-
                  IncentiveProgram defines a liquidity mining incentive program
                  on a single

                  locked uToken denom that will run for a set amount of time.
            description: >-
              QueryIncentivePrograResponse defines the response structure for
              the

              IncentiveProgram gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          description: ID specifies which program to query for
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Query
  /umee/incentive/v1/programs/completed:
    get:
      summary: >-
        CompletedIncentivePrograms queries for all incentives programs that have
        been passed

        by governance, and either run to completion or expired immediately due
        to not being funded.
      operationId: CompletedIncentivePrograms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              programs:
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: integer
                      format: int64
                      description: >-
                        ID uniquely identifies the incentive program after it
                        has been created.

                        It is zero when the program is being proposed by
                        governance, and is set

                        to its final value when the proposal passes.
                    start_time:
                      type: string
                      format: int64
                      description: >-
                        start_time is the unix time (in seconds) at which the
                        incentives begin.

                        If a program is passed after its intended start time,
                        its start time

                        will be increased to the current time, with program
                        duration unchanged.
                    duration:
                      type: string
                      format: int64
                      description: >-
                        duration is the length of the incentive program from
                        start time to

                        completion in seconds.
                    uToken:
                      type: string
                      description: >-
                        uToken is the incentivized uToken collateral denom.
                        Suppliers who collateralize

                        this asset then bond it to the incentive module are
                        eligible for this program's

                        rewards.
                    funded:
                      type: boolean
                      description: >-
                        funded indicates whether a program bas been funded. This
                        can happen when

                        a program passes if funding from community fund, or any
                        time before the

                        program's start time if funding with MsgSponsor. A
                        program that reaches

                        its start time without being funded is cancelled.
                    total_rewards:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    remaining_rewards:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    IncentiveProgram defines a liquidity mining incentive
                    program on a single

                    locked uToken denom that will run for a set amount of time.
            description: >-
              QueryCompletedIncentiveProgramsResponse defines the response
              structure for the

              CompletedIncentivePrograms gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/incentive/v1/programs/ongoing:
    get:
      summary: >-
        OngoingIncentivePrograms queries for all incentives programs that have
        been passed

        by governance, funded, and started but not yet completed.
      operationId: OngoingIncentivePrograms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              programs:
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: integer
                      format: int64
                      description: >-
                        ID uniquely identifies the incentive program after it
                        has been created.

                        It is zero when the program is being proposed by
                        governance, and is set

                        to its final value when the proposal passes.
                    start_time:
                      type: string
                      format: int64
                      description: >-
                        start_time is the unix time (in seconds) at which the
                        incentives begin.

                        If a program is passed after its intended start time,
                        its start time

                        will be increased to the current time, with program
                        duration unchanged.
                    duration:
                      type: string
                      format: int64
                      description: >-
                        duration is the length of the incentive program from
                        start time to

                        completion in seconds.
                    uToken:
                      type: string
                      description: >-
                        uToken is the incentivized uToken collateral denom.
                        Suppliers who collateralize

                        this asset then bond it to the incentive module are
                        eligible for this program's

                        rewards.
                    funded:
                      type: boolean
                      description: >-
                        funded indicates whether a program bas been funded. This
                        can happen when

                        a program passes if funding from community fund, or any
                        time before the

                        program's start time if funding with MsgSponsor. A
                        program that reaches

                        its start time without being funded is cancelled.
                    total_rewards:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    remaining_rewards:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    IncentiveProgram defines a liquidity mining incentive
                    program on a single

                    locked uToken denom that will run for a set amount of time.
            description: >-
              QueryOngoingIncentiveProgramsResponse defines the response
              structure for the

              OngoingIncentivePrograms and UpcomingIncentivePrograms gRPC
              service handlers.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/incentive/v1/programs/upcoming:
    get:
      summary: >-
        UpcomingIncentivePrograms queries for all incentives programs that have
        been passed

        by governance, but not yet started. They may or may not have been
        funded.
      operationId: UpcomingIncentivePrograms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              programs:
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: integer
                      format: int64
                      description: >-
                        ID uniquely identifies the incentive program after it
                        has been created.

                        It is zero when the program is being proposed by
                        governance, and is set

                        to its final value when the proposal passes.
                    start_time:
                      type: string
                      format: int64
                      description: >-
                        start_time is the unix time (in seconds) at which the
                        incentives begin.

                        If a program is passed after its intended start time,
                        its start time

                        will be increased to the current time, with program
                        duration unchanged.
                    duration:
                      type: string
                      format: int64
                      description: >-
                        duration is the length of the incentive program from
                        start time to

                        completion in seconds.
                    uToken:
                      type: string
                      description: >-
                        uToken is the incentivized uToken collateral denom.
                        Suppliers who collateralize

                        this asset then bond it to the incentive module are
                        eligible for this program's

                        rewards.
                    funded:
                      type: boolean
                      description: >-
                        funded indicates whether a program bas been funded. This
                        can happen when

                        a program passes if funding from community fund, or any
                        time before the

                        program's start time if funding with MsgSponsor. A
                        program that reaches

                        its start time without being funded is cancelled.
                    total_rewards:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    remaining_rewards:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    IncentiveProgram defines a liquidity mining incentive
                    program on a single

                    locked uToken denom that will run for a set amount of time.
            description: >-
              QueryUpcomingIncentiveProgramsResponse defines the response
              structure for the

              OngoingIncentivePrograms and UpcomingIncentivePrograms gRPC
              service handlers.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/incentive/v1/total_bonded:
    get:
      summary: TotalBonded queries the sum of all bonded collateral uTokens.
      operationId: TotalBonded
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bonded:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryTotalBondedResponse defines the response structure for the
              TotalBonded gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: >-
            denom is an optional field which causes the query to return the
            totals of only one uToken.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/incentive/v1/total_unbonding:
    get:
      summary: TotalUnbonding queries the sum of all unbonding collateral uTokens.
      operationId: TotalUnbonding
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbonding:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryTotalUnbondingResponse defines the response structure for the
              TotalUnbonding gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: >-
            denom is an optional field which causes the query to return the
            totals of only one uToken.
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/metoken/v1/index_balances:
    get:
      summary: >-
        IndexBalances queries for Index's balances of a specific or all the
        registered indexes.
      operationId: IndexBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              index_balances:
                type: array
                items:
                  type: object
                  properties:
                    metoken_supply:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    asset_balances:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          leveraged:
                            type: string
                          reserved:
                            type: string
                          fees:
                            type: string
                          interest:
                            type: string
                        description: >-
                          AssetBalance tracks how much of a single asset is held
                          in leverage, reserves, fees and interest account.
                  description: >-
                    IndexBalances is the state of an Index, containing its
                    meToken supply and all underlying asset balances.
            description: >-
              QueryIndexBalanceResponse defines the response structure for the
              IndexBalances gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: metoken_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/metoken/v1/index_price:
    get:
      summary: >-
        IndexPrice queries for Index's price of a specific or all the registered
        indexes.
      operationId: IndexPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              prices:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      description: meToken denom.
                    price:
                      type: string
                      description: >-
                        Price in USD of one unit of meToken, expressed in
                        decimals.
                    exponent:
                      type: integer
                      format: int64
                      description: >-
                        Exponent is the power of ten by which to multiply, in
                        order to convert

                        an amount of the meToken for the exchange operations.
                  description: Price is used to inform meToken price and exponent.
            description: >-
              QueryIndexPriceResponse defines the response structure for the
              IndexPrice gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: metoken_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/metoken/v1/indexes:
    get:
      summary: Indexes queries for a specific or all the registered indexes.
      operationId: Indexes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              registry:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      description: >-
                        Denom is the denomination of the Index's meToken denom
                        that will be given to user in exchange of accepted

                        assets.
                    max_supply:
                      type: string
                      description: >-
                        MaxSupply is the maximum amount of Index's meTokens can
                        be minted.

                        A swap that requires to mint more Index's meToken than
                        this value will result in an error.

                        Must be a non negative value. 0 means that there is no
                        limit.
                    exponent:
                      type: integer
                      format: int64
                      description: >-
                        Exponent is the power of ten by which to multiply, in
                        order to convert

                        an amount of the meToken for the exchange operations.

                        Valid value: must be the same as the
                        oracle.Denom.exponent.
                    fee:
                      description: >-
                        Fee contains fee parameters used for swap and redemption
                        fee calculations for all underlying

                        assets in this index.
                      type: object
                      properties:
                        min_fee:
                          type: string
                          description: >-
                            Min fee is the minimum fee to be charged to the
                            user. The applied fee will tend to decrease down to
                            this value,

                            when the accepted asset is undersupplied in the
                            index. It must be less than Balanced and Max fees.

                            Valid values: 0-1.
                        balanced_fee:
                          type: string
                          description: >-
                            Balanced fee is the fee to be charged to the user
                            when the index is balanced. It must be greater than
                            min_fee and

                            lower than max_fee

                            Valid values: 0-1.
                        max_fee:
                          type: string
                          description: >-
                            Max fee is the maximum fee to be charged to the
                            user. The applied fee will tend to increase up to
                            this value,

                            when the accepted asset is oversupplied in the
                            index. It must be greater than Min and Balanced fee.

                            Valid values: 0-1.
                      title: >-
                        Fee are the parameters used for the calculation of the
                        fee to be applied for swaps and redemptions and charged
                        to

                        the user. The usage of these parameters is explained
                        here:

                        https://github.com/umee-network/umee/tree/main/x/metoken#dynamic-fee
                    accepted_assets:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            description: >-
                              Denom is the denomination of the underlying asset.
                              Must be the base

                              denom as registered in the Bank module (so IBC
                              denom for IBC tokens).
                          reserve_portion:
                            type: string
                            description: >-
                              Reserve portion is the portion of swapped assets
                              that will be kept in the metoken module as
                              reserves,

                              instead of supplied to the leverage module. It is
                              also the

                              portion that will be taken from metoken module
                              reserves when a redemption occurs.

                              Valid values: 0-1.
                          target_allocation:
                            type: string
                            description: >-
                              Target allocation is the portion of an accepted
                              asset the Index is targeting to have. The sum of

                              target allocations of every accepted asset in the
                              Index should be equal to 1.

                              Valid values: 0-1.
                        title: >-
                          AcceptedAsset is an asset that is accepted to
                          participate in the Index's swaps and redemptions,
                          along with its

                          metadata and parameters
                      description: >-
                        Accepted Assets is the list of underlying Tokens that
                        can be swapped and redeemed for the Index's meToken,

                        along with their token-specific parameters.
                  description: >-
                    Index defines an index of assets that are allowed to swap
                    and redeem for the Index's meToken,

                    along with its metadata and parameters.
            description: >-
              QueryIndexesResponse defines the response structure for the
              Indexes gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: metoken_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/metoken/v1/params:
    get:
      summary: Params queries the parameters of the x/metoken module.
      operationId: MeTokenParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  rebalancing_frequency:
                    type: string
                    format: int64
                    title: >-
                      Reserves Re-balancing Frequency in seconds, determines how
                      often the re-balancing of the module reserves will be

                      triggered
                  claiming_frequency:
                    type: string
                    format: int64
                    title: >-
                      Interest claiming frequency in seconds, determines how
                      often metoken module will claim accrued interest from

                      leverage module
                description: Params defines the parameters for the metoken module.
            description: >-
              QueryParamsResponse defines the response structure for the Params
              gRPC

              service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/metoken/v1/redeem_fee:
    get:
      summary: RedeemFee computes a fee that would be applied when executing MsgRedeem.
      operationId: RedeemFee
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              asset:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QueryRedeemFeeResponse defines the response structure for the
              RedeemFee gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: metoken.denom
          in: query
          required: false
          type: string
        - name: metoken.amount
          in: query
          required: false
          type: string
        - name: asset_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/metoken/v1/swap_fee:
    get:
      summary: SwapFee computes fee that would be applied when executing MsgSwap.
      operationId: SwapFee
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              asset:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QuerySwapFeeResponse defines the response structure for the
              SwapFee gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: asset.denom
          in: query
          required: false
          type: string
        - name: asset.amount
          in: query
          required: false
          type: string
        - name: metoken_denom
          in: query
          required: false
          type: string
      tags:
        - Query
definitions:
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  cosmos.base.v1beta1.DecCoin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
  umee.leverage.v1.BadDebt:
    type: object
    properties:
      address:
        type: string
      denom:
        type: string
    description: >-
      BadDebt is a bad debt instance used in the leverage module's genesis
      state.
  umee.leverage.v1.DecBalances:
    type: object
    properties:
      collateral:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: >-
          Collateral contains all uTokens the account has collateralized. It has
          been converted from uTokens to tokens.
      borrowed:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: >-
          Borrowed contains all tokens the account has borrowed, including
          interest owed.
    description: DecBalances contains an account's position denoted in symbol denom tokens.
  umee.leverage.v1.InspectAccount:
    type: object
    properties:
      address:
        type: string
        title: Address of a borrower
      analysis:
        description: USD totals of borrower's collateral, debt, and liquidation threshold.
        type: object
        properties:
          Borrowed:
            type: number
            format: double
            description: Borrowed is account's borrowed value in USD.
          Liquidation:
            type: number
            format: double
            description: Liquidation is account's liquidation threshold in USD.
          Value:
            type: number
            format: double
            description: Value is account's collateral value in USD.
      position:
        description: >-
          Collateral and borrowed tokens, denoted in human-readable symbol denom
          instead of ibc denom.
        type: object
        properties:
          collateral:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
            description: >-
              Collateral contains all uTokens the account has collateralized. It
              has been converted from uTokens to tokens.
          borrowed:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
            description: >-
              Borrowed contains all tokens the account has borrowed, including
              interest owed.
    description: >-
      InspectAccount contains risk and balance info for a single account for the
      inspector query.
  umee.leverage.v1.Params:
    type: object
    properties:
      complete_liquidation_threshold:
        type: string
        description: >-
          Complete Liquidation Threshold determines how far between

          liquidation_threshold (LT) and collateral_value (CV) a borrower's

          borrowed value must have progressed in order to allow a full
          liquidation.

          0.3 indicates 30% of the way from LT to CV.

          See also `minimum_close_factor` for more information.

          Valid values: 0-1.
      minimum_close_factor:
        type: string
        description: |-
          borrowed          CV := collateral
                      value                   value
           --- | ------- | ----- | -------- | ------->
              LV                 CL

          LV = liquidation value = liquidation_threshold * CV
          CL = LV + (CV-LV) * complete_liquidation_threshold
             is the borrowed value above which close factor will be 1.

          Valid values: 0-1.
        title: >-
          Close Factor determines the portion of a borrower's position that can
          be

          liquidated in a single event. Minimum Close Factor is Close Factor at

          liquidation_threshold. 0.1 means that that 10% of the borrower
          position can

          be liquidated when the borrowed value passes the
          liquidation_threshold.

          close_factor scales linearly between minimum_close_factor and 1.0,

          reaching its maximum when borrowed value passes

          complete_liquidation_threshold. We can put it into the picture:
      oracle_reward_factor:
        type: string
        description: |-
          Oracle Reward Factor determines the portion of interest accrued on
          borrows that is sent to the oracle module to fund its reward pool.
          Valid values: 0-1.
      small_liquidation_size:
        type: string
        description: >-
          Small Liquidation Size determines the USD value at which a borrow is

          considered small enough to be liquidated in a single transaction,
          bypassing

          dynamic close factor.
      direct_liquidation_fee:
        type: string
        description: >-
          Direct Liquidation Fee is a reduction factor in liquidation incentive

          experienced by liquidators who choose to receive base assets instead
          of

          uTokens as liquidation rewards.

          Valid values: 0-1.
    description: >-
      Params defines the parameters for the leverage module.

      See
      https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md

      for more details.
  umee.leverage.v1.QueryAccountBalancesResponse:
    type: object
    properties:
      supplied:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Supplied contains all tokens the account has supplied, including
          interest earned. It is denominated in base tokens, so exponent from
          each coin's registered_tokens entry must be applied to convert to
          symbol denom.
      collateral:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Collateral contains all uTokens the account has collateralized. It is
          denominated in uTokens, so both exponent and uToken exchange rate from
          each coin's market_summary must be applied to convert to base token
          symbol denom.
      borrowed:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Borrowed contains all tokens the account has borrowed, including
          interest owed. It is denominated in base tokens, so exponent from each
          coin's registered_tokens entry must be applied to convert to symbol
          denom.
    description: >-
      QueryAccountBalancesResponse defines the response structure for the
      AccountBalances gRPC service handler.
  umee.leverage.v1.QueryAccountSummaryResponse:
    type: object
    properties:
      supplied_value:
        type: string
        description: >-
          Supplied Value is the sum of the USD value of all tokens the account
          has supplied, including interest earned.

          Computation skips assets which are missing oracle prices, potentially
          resulting in a lower supplied

          value than if prices were all available.
      collateral_value:
        type: string
        description: >-
          Collateral Value is the sum of the USD value of all uTokens the
          account has collateralized.

          Computation skips collateral which is missing an oracle price,
          potentially resulting in a lower collateral

          value than if prices were all available.
      borrowed_value:
        type: string
        description: >-
          Borrowed Value is the sum of the USD value of all tokens the account
          has borrowed, including interest owed.

          It always uses spot prices.

          Computation skips borrows which are missing oracle prices, potentially
          resulting in a lower borrowed

          value than if prices were all available.
      borrow_limit:
        type: string
        description: >-
          Borrow Limit is the maximum Borrowed Value the account is allowed to
          reach through direct borrowing.

          The lower of spot or historic price for each collateral token is used
          when calculating borrow limits.

          Computation skips collateral which is missing an oracle price,
          potentially resulting in a lower borrow

          limit than if prices were all available.
      liquidation_threshold:
        type: string
        description: >-
          Liquidation Threshold is the Borrowed Value at which the account
          becomes eligible for liquidation.

          Will be null if an oracle price required for computation is missing.
    description: >-
      QueryAccountSummaryResponse defines the response structure for the
      AccountSummary gRPC service handler.
  umee.leverage.v1.QueryBadDebtsResponse:
    type: object
    properties:
      targets:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            denom:
              type: string
          description: >-
            BadDebt is a bad debt instance used in the leverage module's genesis
            state.
        description: >-
          Targets are borrow positions currently marked for bad debt repayment.
          Each contains an Address and a Denom.
    description: >-
      QueryBadDebtsResponse defines the response structure for the BedDebts gRPC
      service handler.
  umee.leverage.v1.QueryInspectResponse:
    type: object
    properties:
      borrowers:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              title: Address of a borrower
            analysis:
              description: >-
                USD totals of borrower's collateral, debt, and liquidation
                threshold.
              type: object
              properties:
                Borrowed:
                  type: number
                  format: double
                  description: Borrowed is account's borrowed value in USD.
                Liquidation:
                  type: number
                  format: double
                  description: Liquidation is account's liquidation threshold in USD.
                Value:
                  type: number
                  format: double
                  description: Value is account's collateral value in USD.
            position:
              description: >-
                Collateral and borrowed tokens, denoted in human-readable symbol
                denom instead of ibc denom.
              type: object
              properties:
                collateral:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      DecCoin defines a token with a denomination and a decimal
                      amount.


                      NOTE: The amount field is an Dec which implements the
                      custom method

                      signatures required by gogoproto.
                  description: >-
                    Collateral contains all uTokens the account has
                    collateralized. It has been converted from uTokens to
                    tokens.
                borrowed:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      DecCoin defines a token with a denomination and a decimal
                      amount.


                      NOTE: The amount field is an Dec which implements the
                      custom method

                      signatures required by gogoproto.
                  description: >-
                    Borrowed contains all tokens the account has borrowed,
                    including interest owed.
          description: >-
            InspectAccount contains risk and balance info for a single account
            for the inspector query.
    description: >-
      QueryInspectResponse defines the response structure for the Inspect gRPC
      service handler.
  umee.leverage.v1.QueryLiquidationTargetsResponse:
    type: object
    properties:
      targets:
        type: array
        items:
          type: string
        description: Targets are the addresses of borrowers eligible for liquidation.
    description: >-
      QueryLiquidationTargetsResponse defines the response structure for the
      LiquidationTargets gRPC service handler.
  umee.leverage.v1.QueryMarketSummaryResponse:
    type: object
    properties:
      symbol_denom:
        type: string
        description: >-
          Symbol Denom is the human-readable representation of a token denom,
          for example "UMEE" or "ATOM".
      exponent:
        type: integer
        format: int64
        description: >-
          Exponent is the power of ten required to get from base denom to symbol
          denom. For example, an exponent of 6 means 10^6 uumee = 1 UMEE.
      oracle_price:
        type: string
        description: >-
          Oracle Price is the current USD value of a token. Oracle price is nil
          when the oracle is down.
      uToken_exchange_rate:
        type: string
        description: >-
          uToken Exchange Rate is the amount of base tokens received when
          withdrawing 1 uToken. For example, a uToken exchange rate of 1.5 means
          a supplier receives 3 uumee for every 2 u/uumee they wish to withdraw.
          The same applies in reverse: supplying 3 uumee would award 2 u/uumee
          at that time.
      supply_APY:
        type: string
        description: >-
          Supply APY is the current interest rate suppliers are receiving for
          their deposits. For example, 0.11 would mean 11% APY. Supply APY is
          always less than borrow APY.
      borrow_APY:
        type: string
        description: >-
          Borrow APY is the current interest rate borrowers are being charged on
          their loans. For example, 0.2 would mean 20% APY.
      supplied:
        type: string
        description: >-
          Supplied is the total amount of tokens supplied to the the system by
          all suppliers, including any interest earned. This includes that
          tokens which have been borrowed out or enabled as collateral, but
          excludes reserves. Supplied is denominated in base tokens, so exponent
          must be applied to convert to symbol denom.
      reserved:
        type: string
        description: >-
          Reserved is the total amount of tokens held in reserve by the module
          for emergencies. Reserves are always excluded from total supply,
          borrow, collateral, and liqduidity queries. Reserves are denominated
          in base tokens, so exponent must be applied to convert to symbol
          denom.
      collateral:
        type: string
        description: >-
          Collateral is the total amount of uTokens collateralized by all
          borrowers. Collateral is denominated in uTokenso, so both uToken
          exchange rate and exponent must also be applied to convert to symbol
          denom. For example, if collateral is 4000000 u/uumee and uToken
          exchange rate is 1.2, then 5 UMEE have been collateralized.
      borrowed:
        type: string
        description: >-
          Borrowed is the total amount of debt in this token held across all
          borrowers. It is denominated in base tokens, so exponent must be
          applied to convert to symbol denom.
      liquidity:
        type: string
        description: >-
          Liquidity is the amount of a token that has been supplied but not yet
          borrowed or reserved. It is denominated in base tokens, so exponent
          must be applied to convert to symbol denom.
      maximum_borrow:
        type: string
        description: >-
          Maximum Borrow is the amount of a token that is available for
          borrowing, including that which has already been borrowed out. This
          amount is less than total supply due to safety limits. It is
          denominated in base tokens, so exponent must be applied to convert to
          symbol denom. For example, if borrowed is 3000000 uumee and maximum
          borrow is 4000000 uumee, then 1 UMEE is currently available for
          borrowing.
      maximum_collateral:
        type: string
        description: >-
          Maximum Collateral is the amount of a token that can be
          collateralized, including that which is already collateral. This
          amount is less than total supply due to safety limits. It is
          denominated in uTokens, so both uToken exchange rate and exponent must
          be applied to convert to symbol denom. For example, if collateral is
          4000000 u/uumee, uToken exchange rate is 1.2, and maximum borrow is
          7000000 uumee, then a maximum of 2 additional UMEE is permitted to be
          collateralized.
      minimum_liquidity:
        type: string
        description: >-
          Minimum Liquidity is the minimum amount of liquidity in the module
          required by safety limits, based on the current collateral. It is
          denominated in base tokens, so exponent must be applied to convert to
          symbol denom. For example, if liquidity is 9000000 uumee and minimum
          liquidity is 8000000 uumee, then a maximum of 1 additional UMEE is
          currently available for borrowing or withdrawal.
      uToken_supply:
        type: string
        description: >-
          uToken Supply is the total amount of a base token's associated uToken
          in circulation.
      available_borrow:
        type: string
        description: >-
          Available Borrow is the maximum additional amount of base tokens than
          can be borrowed based on current liquidity and system safety limits.
          It can also be calculated by MIN(maximum_borrow - borrowed, liquidity
          - minimum_liquidity). It is denominated in base tokens, so exponent
          must be applied to convert to symbol denom. A negative availability
          means safety limits have been exceeded and borrowing is temporarily
          unavailable.
      available_withdraw:
        type: string
        description: >-
          Available Withdraw is the maximum amount of uTokens than can currently
          be withdrawn based on liquidity and system safety limits. It can also
          be calculated by (liquidity - minimum_liquidity). It is denominated in
          uTokens, so both uToken exchange rate and exponent must be applied to
          convert to symbol denom. A negative availability means safety limits
          have been exceeded and withdrawal is temporarily unavailable.
      available_collateralize:
        type: string
        description: >-
          Available Collateralize is the maximum additional amount of uTokens
          than can be collateralized based on current liquidity and system
          safety limits. It can also be calculated by (maximum_collateral, -
          collateral). It is denominated in uTokens, so both uToken exchange
          rate and exponent must be applied to convert to symbol denom. A
          negative availability means safety limits have been exceeded and
          additional collateral cannot be created until more liquidity is
          present.
      oracle_historic_price:
        type: string
        description: >-
          Oracle Historic Price is the historic USD value of a token. Historic
          price is defined as the median of the last N historic median prices
          from the oracle module, with N being this token's HistoricMedians in
          the leverage registry. Current price is used if required medians is
          zero. Price is nil when the oracle is down or insufficient historic
          medians are available.
      errors:
        type: string
    description: >-
      QueryMarketSummaryResponse defines the response structure for the
      MarketSummary gRPC service handler.
  umee.leverage.v1.QueryMaxBorrowResponse:
    type: object
    properties:
      tokens:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: Tokens is the maximum amount of tokens that can be borrowed
    description: >-
      QueryMaxBorrowResponse defines the response structure for the MaxBorrow
      gRPC service handler.
  umee.leverage.v1.QueryMaxWithdrawResponse:
    type: object
    properties:
      uTokens:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: uTokens is the maximum amount of uTokens that can be withdrawn
      tokens:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: Tokens is the equivalent of max uTokens converted to base tokens
    description: >-
      QueryMaxWithdrawResponse defines the response structure for the
      MaxWithdraw gRPC service handler.
  umee.leverage.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          complete_liquidation_threshold:
            type: string
            description: >-
              Complete Liquidation Threshold determines how far between

              liquidation_threshold (LT) and collateral_value (CV) a borrower's

              borrowed value must have progressed in order to allow a full
              liquidation.

              0.3 indicates 30% of the way from LT to CV.

              See also `minimum_close_factor` for more information.

              Valid values: 0-1.
          minimum_close_factor:
            type: string
            description: |-
              borrowed          CV := collateral
                          value                   value
               --- | ------- | ----- | -------- | ------->
                  LV                 CL

              LV = liquidation value = liquidation_threshold * CV
              CL = LV + (CV-LV) * complete_liquidation_threshold
                 is the borrowed value above which close factor will be 1.

              Valid values: 0-1.
            title: >-
              Close Factor determines the portion of a borrower's position that
              can be

              liquidated in a single event. Minimum Close Factor is Close Factor
              at

              liquidation_threshold. 0.1 means that that 10% of the borrower
              position can

              be liquidated when the borrowed value passes the
              liquidation_threshold.

              close_factor scales linearly between minimum_close_factor and 1.0,

              reaching its maximum when borrowed value passes

              complete_liquidation_threshold. We can put it into the picture:
          oracle_reward_factor:
            type: string
            description: |-
              Oracle Reward Factor determines the portion of interest accrued on
              borrows that is sent to the oracle module to fund its reward pool.
              Valid values: 0-1.
          small_liquidation_size:
            type: string
            description: >-
              Small Liquidation Size determines the USD value at which a borrow
              is

              considered small enough to be liquidated in a single transaction,
              bypassing

              dynamic close factor.
          direct_liquidation_fee:
            type: string
            description: >-
              Direct Liquidation Fee is a reduction factor in liquidation
              incentive

              experienced by liquidators who choose to receive base assets
              instead of

              uTokens as liquidation rewards.

              Valid values: 0-1.
        description: >-
          Params defines the parameters for the leverage module.

          See
          https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md

          for more details.
    description: |-
      QueryParamsResponse defines the response structure for the Params gRPC
      service handler.
  umee.leverage.v1.QueryRegisteredTokensResponse:
    type: object
    properties:
      registry:
        type: array
        items:
          type: object
          properties:
            base_denom:
              type: string
              description: >-
                Base Denom is the denomination of the underlying base token.
                Must be the base

                denom as registered in the Bank module (so IBC denom for IBC
                tokens).
            reserve_factor:
              type: string
              description: >-
                Reserve Factor defines what portion of accrued interest goes to
                reserves

                when this token is borrowed.

                Valid values: 0-1.
            collateral_weight:
              type: string
              description: >-
                Collateral Weight defines what portion of the total value of the
                asset

                can contribute to a users borrowing power. If the collateral
                weight is

                zero, using this asset as collateral against borrowing will be
                disabled.

                Must be smaller than `liquidation_threshold`.

                Valid values: 0-1.
            liquidation_threshold:
              type: string
              description: >-
                Liquidation Threshold defines what amount of the total value of
                the

                asset as a collateral can contribute to a user's liquidation
                threshold

                (above which they become eligible for liquidation).

                Must be bigger than `collateral_weight`.

                Valid values: 0-1.

                See also: min_close_factor.
            base_borrow_rate:
              type: string
              title: >-
                Base Borrow Rate defines the minimum interest rate for borrowing
                this

                asset.

                Valid values: 0-∞
            kink_borrow_rate:
              type: string
              title: |-
                Kink Borrow Rate defines the interest rate for borrowing this
                asset when supply utilization is equal to 'kink_utilization'.
                Valid values: 0-∞
            max_borrow_rate:
              type: string
              title: |-
                Max Borrow Rate defines the interest rate for borrowing this
                asset when supply utilization is at its maximum.
                Valid values: 0-∞
            kink_utilization:
              type: string
              description: |-
                Kink Utilization defines the supply utilization value where
                the kink in the borrow interest rate function occurs.
                Valid values: 0-1.
            liquidation_incentive:
              type: string
              description: >-
                Liquidation Incentive determines the portion of bonus collateral
                of

                a token type liquidators receive as a liquidation reward.

                Valid values: 0-1.
            symbol_denom:
              type: string
              description: Symbol Denom is the human readable denomination of this token.
            exponent:
              type: integer
              format: int64
              description: >-
                Exponent is the power of ten by which to multiply, in order to
                convert

                an amount of the token denoted in its symbol denom to the actual
                amount

                of its base denom.
            enable_msg_supply:
              type: boolean
              description: >-
                Enable Msg Supply allows supplying for lending or collateral
                using this

                token. `false` means that a token can no longer be supplied.

                Note that withdrawing is always enabled. Disabling supply would

                be one step in phasing out an asset type.
            enable_msg_borrow:
              type: boolean
              description: >-
                Enable Msg Borrow allows borrowing of this token. Note that
                repaying is

                always enabled. Disabling borrowing would be one step in phasing
                out an

                asset type, but could also be used from the start for asset
                types meant

                to be collateral only, like meTokens.
            blacklist:
              type: boolean
              description: >-
                Blacklist should only be used to eliminate an asset completely.
                A blacklisted

                asset is treated as though its oracle price is zero, and thus
                ignored by

                calculations such as collateral value and borrow limit. Can
                still be repaid

                or withdrawn, but not liquidated. A blacklisted token must have
                enable_msg_supply

                and enable_msg_borrow set to false. Such tokens can be safely
                removed from the

                oracle and price feeder as well.
            max_collateral_share:
              type: string
              description: >-
                Max Collateral Share specifies how much of the system's overall
                collateral

                can be provided by a given token. 1.0 means that the token has
                no restriction.

                0.1 means maximum 10% of system's total collateral value can be
                provided by this token.

                Valid values: 0-1.
            max_supply_utilization:
              type: string
              description: >-
                Max Supply Utilization specifies the maximum supply utilization
                a token is

                allowed to reach as a direct result of user borrowing. New
                borrows are not allowed when

                the supply utilization is above `max_supply_utilization`.
                   supply_utilization(token) = total_borrowed(token) / total_supply(token)
                Valid values: 0-1.
            min_collateral_liquidity:
              type: string
              title: >-
                Min Collateral Liquidity specifies min limit for the following
                function:
                   collateral_liquidity(token) = available(token) / total_collateral(token)
                Borrowing, collateralizing, or withdrawing assets is not allowed
                when the

                result of such action invalidates min_collateral_liquidity.

                Liquidity can only drop below this value due to interest or
                liquidations.

                The goal is to assure that there is enough available (not
                borrowed) token to be available

                for withdraw when there is a collateral liquidation and the
                liquidator needs to

                withdraw uToken.

                Valid values: 0 - inf
            max_supply:
              type: string
              description: >-
                Max Supply is the maximum amount of tokens the protocol can
                hold.

                Adding more supply of the given token to the protocol will
                return an error.

                Must be a non negative value. 0 means that there is no limit.

                To mark a token as not valid for supply, `msg_supply` must be
                set to false.
            historic_medians:
              type: integer
              format: int64
              description: >-
                Historic Medians is the number of median historic prices to
                request from

                the oracle module when evaluating new borrow positions
                containing this token.

                All MsgBorrow, MsgWithdraw, and MsgDecollateralize must result
                in healthy

                borrow positions under both current and historic prices. The
                default value of

                zero for this field causes current price to be used in those
                calculations

                for the affected Token.

                The time span covered by the historic median will be:
                    oracle.Params.median_stamp_period * oracle.Params.historic_stamp_period * historic_medians.
          description: >-
            Token defines a token, along with its metadata and parameters, in
            the Umee

            capital facility that can be supplied and borrowed.

            See
            https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md

            for more details.
    description: |-
      QueryRegisteredTokensResponse defines the response structure for the
      RegisteredTokens gRPC service handler.
  umee.leverage.v1.RiskInfo:
    type: object
    properties:
      Borrowed:
        type: number
        format: double
        description: Borrowed is account's borrowed value in USD.
      Liquidation:
        type: number
        format: double
        description: Liquidation is account's liquidation threshold in USD.
      Value:
        type: number
        format: double
        description: Value is account's collateral value in USD.
    description: >-
      RiskInfo defines a borrower's account health without requiring sdk.Dec
      formatting.
  umee.leverage.v1.Token:
    type: object
    properties:
      base_denom:
        type: string
        description: >-
          Base Denom is the denomination of the underlying base token. Must be
          the base

          denom as registered in the Bank module (so IBC denom for IBC tokens).
      reserve_factor:
        type: string
        description: >-
          Reserve Factor defines what portion of accrued interest goes to
          reserves

          when this token is borrowed.

          Valid values: 0-1.
      collateral_weight:
        type: string
        description: >-
          Collateral Weight defines what portion of the total value of the asset

          can contribute to a users borrowing power. If the collateral weight is

          zero, using this asset as collateral against borrowing will be
          disabled.

          Must be smaller than `liquidation_threshold`.

          Valid values: 0-1.
      liquidation_threshold:
        type: string
        description: |-
          Liquidation Threshold defines what amount of the total value of the
          asset as a collateral can contribute to a user's liquidation threshold
          (above which they become eligible for liquidation).
          Must be bigger than `collateral_weight`.
          Valid values: 0-1.
          See also: min_close_factor.
      base_borrow_rate:
        type: string
        title: |-
          Base Borrow Rate defines the minimum interest rate for borrowing this
          asset.
          Valid values: 0-∞
      kink_borrow_rate:
        type: string
        title: |-
          Kink Borrow Rate defines the interest rate for borrowing this
          asset when supply utilization is equal to 'kink_utilization'.
          Valid values: 0-∞
      max_borrow_rate:
        type: string
        title: |-
          Max Borrow Rate defines the interest rate for borrowing this
          asset when supply utilization is at its maximum.
          Valid values: 0-∞
      kink_utilization:
        type: string
        description: |-
          Kink Utilization defines the supply utilization value where
          the kink in the borrow interest rate function occurs.
          Valid values: 0-1.
      liquidation_incentive:
        type: string
        description: |-
          Liquidation Incentive determines the portion of bonus collateral of
          a token type liquidators receive as a liquidation reward.
          Valid values: 0-1.
      symbol_denom:
        type: string
        description: Symbol Denom is the human readable denomination of this token.
      exponent:
        type: integer
        format: int64
        description: >-
          Exponent is the power of ten by which to multiply, in order to convert

          an amount of the token denoted in its symbol denom to the actual
          amount

          of its base denom.
      enable_msg_supply:
        type: boolean
        description: >-
          Enable Msg Supply allows supplying for lending or collateral using
          this

          token. `false` means that a token can no longer be supplied.

          Note that withdrawing is always enabled. Disabling supply would

          be one step in phasing out an asset type.
      enable_msg_borrow:
        type: boolean
        description: >-
          Enable Msg Borrow allows borrowing of this token. Note that repaying
          is

          always enabled. Disabling borrowing would be one step in phasing out
          an

          asset type, but could also be used from the start for asset types
          meant

          to be collateral only, like meTokens.
      blacklist:
        type: boolean
        description: >-
          Blacklist should only be used to eliminate an asset completely. A
          blacklisted

          asset is treated as though its oracle price is zero, and thus ignored
          by

          calculations such as collateral value and borrow limit. Can still be
          repaid

          or withdrawn, but not liquidated. A blacklisted token must have
          enable_msg_supply

          and enable_msg_borrow set to false. Such tokens can be safely removed
          from the

          oracle and price feeder as well.
      max_collateral_share:
        type: string
        description: >-
          Max Collateral Share specifies how much of the system's overall
          collateral

          can be provided by a given token. 1.0 means that the token has no
          restriction.

          0.1 means maximum 10% of system's total collateral value can be
          provided by this token.

          Valid values: 0-1.
      max_supply_utilization:
        type: string
        description: >-
          Max Supply Utilization specifies the maximum supply utilization a
          token is

          allowed to reach as a direct result of user borrowing. New borrows are
          not allowed when

          the supply utilization is above `max_supply_utilization`.
             supply_utilization(token) = total_borrowed(token) / total_supply(token)
          Valid values: 0-1.
      min_collateral_liquidity:
        type: string
        title: >-
          Min Collateral Liquidity specifies min limit for the following
          function:
             collateral_liquidity(token) = available(token) / total_collateral(token)
          Borrowing, collateralizing, or withdrawing assets is not allowed when
          the

          result of such action invalidates min_collateral_liquidity.

          Liquidity can only drop below this value due to interest or
          liquidations.

          The goal is to assure that there is enough available (not borrowed)
          token to be available

          for withdraw when there is a collateral liquidation and the liquidator
          needs to

          withdraw uToken.

          Valid values: 0 - inf
      max_supply:
        type: string
        description: >-
          Max Supply is the maximum amount of tokens the protocol can hold.

          Adding more supply of the given token to the protocol will return an
          error.

          Must be a non negative value. 0 means that there is no limit.

          To mark a token as not valid for supply, `msg_supply` must be set to
          false.
      historic_medians:
        type: integer
        format: int64
        description: >-
          Historic Medians is the number of median historic prices to request
          from

          the oracle module when evaluating new borrow positions containing this
          token.

          All MsgBorrow, MsgWithdraw, and MsgDecollateralize must result in
          healthy

          borrow positions under both current and historic prices. The default
          value of

          zero for this field causes current price to be used in those
          calculations

          for the affected Token.

          The time span covered by the historic median will be:
              oracle.Params.median_stamp_period * oracle.Params.historic_stamp_period * historic_medians.
    description: >-
      Token defines a token, along with its metadata and parameters, in the Umee

      capital facility that can be supplied and borrowed.

      See
      https://github.com/umee-network/umee/blob/main/docs/design_docs/010-market-params.md

      for more details.
  umee.oracle.v1.AggregateExchangeRatePrevote:
    type: object
    properties:
      hash:
        type: string
      voter:
        type: string
      submit_block:
        type: string
        format: uint64
    title: |-
      AggregateExchangeRatePrevote -
      struct for aggregate prevoting on the ExchangeRateVote.
      The purpose of aggregate prevote is to hide vote exchange rates with hash
      which is formatted as hex string in SHA256("{salt}:{exchange
      rate}{denom},...,{exchange rate}{denom}:{voter}")
  umee.oracle.v1.AggregateExchangeRateVote:
    type: object
    properties:
      exchange_rate_tuples:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            exchange_rate:
              type: string
          title: >-
            ExchangeRateTuple - struct to store interpreted exchange rates data
            to store
      voter:
        type: string
    description: |-
      AggregateExchangeRateVote - struct for voting on
      the exchange rates of USD denominated in various assets.
  umee.oracle.v1.Denom:
    type: object
    properties:
      base_denom:
        type: string
      symbol_denom:
        type: string
      exponent:
        type: integer
        format: int64
    title: Denom - the object to hold configurations of each denom
  umee.oracle.v1.ExchangeRateTuple:
    type: object
    properties:
      denom:
        type: string
      exchange_rate:
        type: string
    title: >-
      ExchangeRateTuple - struct to store interpreted exchange rates data to
      store
  umee.oracle.v1.Params:
    type: object
    properties:
      vote_period:
        type: string
        format: uint64
      vote_threshold:
        type: string
      reward_band:
        type: string
      reward_distribution_window:
        type: string
        format: uint64
      accept_list:
        type: array
        items:
          type: object
          properties:
            base_denom:
              type: string
            symbol_denom:
              type: string
            exponent:
              type: integer
              format: int64
          title: Denom - the object to hold configurations of each denom
      slash_fraction:
        type: string
      slash_window:
        type: string
        format: uint64
      min_valid_per_window:
        type: string
      historic_stamp_period:
        type: string
        format: uint64
        description: |-
          Historic Stamp Period represents the amount of blocks the oracle
          module waits before recording a new historic price.
      median_stamp_period:
        type: string
        format: uint64
        description: |-
          Median Stamp Period represents the amount blocks the oracle module
          waits between calculating and stamping a new median and standard
          deviation of that median.
      maximum_price_stamps:
        type: string
        format: uint64
        description: |-
          Maximum Price Stamps represents the maximum amount of historic prices
          the oracle module will store before pruning via FIFO.
      maximum_median_stamps:
        type: string
        format: uint64
        description: |-
          Maximum Median Stamps represents the maximum amount of medians the
          oracle module will store before pruning via FIFO.
    description: Params defines the parameters for the oracle module.
  umee.oracle.v1.Price:
    type: object
    properties:
      exchange_rate_tuple:
        type: object
        properties:
          denom:
            type: string
          exchange_rate:
            type: string
        title: >-
          ExchangeRateTuple - struct to store interpreted exchange rates data to
          store
      block_num:
        type: string
        format: uint64
    title: Price is an instance of a price "stamp"
  umee.oracle.v1.QueryActiveExchangeRatesResponse:
    type: object
    properties:
      active_rates:
        type: array
        items:
          type: string
        description: >-
          activeRates defines a list of the denomination which oracle prices
          agreed

          upon.
    description: |-
      QueryActiveExchangeRatesResponse is response type for the
      Query/ActiveExchangeRates RPC method.
  umee.oracle.v1.QueryAggregatePrevoteResponse:
    type: object
    properties:
      aggregate_prevote:
        type: object
        properties:
          hash:
            type: string
          voter:
            type: string
          submit_block:
            type: string
            format: uint64
        title: >-
          AggregateExchangeRatePrevote -

          struct for aggregate prevoting on the ExchangeRateVote.

          The purpose of aggregate prevote is to hide vote exchange rates with
          hash

          which is formatted as hex string in SHA256("{salt}:{exchange

          rate}{denom},...,{exchange rate}{denom}:{voter}")
    description: |-
      QueryAggregatePrevoteResponse is response type for the
      Query/AggregatePrevote RPC method.
  umee.oracle.v1.QueryAggregatePrevotesResponse:
    type: object
    properties:
      aggregate_prevotes:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
            voter:
              type: string
            submit_block:
              type: string
              format: uint64
          title: >-
            AggregateExchangeRatePrevote -

            struct for aggregate prevoting on the ExchangeRateVote.

            The purpose of aggregate prevote is to hide vote exchange rates with
            hash

            which is formatted as hex string in SHA256("{salt}:{exchange

            rate}{denom},...,{exchange rate}{denom}:{voter}")
        title: >-
          aggregate_prevotes defines all oracle aggregate prevotes submitted in
          the

          current vote period
    description: |-
      QueryAggregatePrevotesResponse is response type for the
      Query/AggregatePrevotes RPC method.
  umee.oracle.v1.QueryAggregateVoteResponse:
    type: object
    properties:
      aggregate_vote:
        title: >-
          aggregate_vote defines oracle aggregate vote submitted by a validator
          in

          the current vote period
        type: object
        properties:
          exchange_rate_tuples:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                exchange_rate:
                  type: string
              title: >-
                ExchangeRateTuple - struct to store interpreted exchange rates
                data to store
          voter:
            type: string
        description: |-
          AggregateExchangeRateVote - struct for voting on
          the exchange rates of USD denominated in various assets.
    description: |-
      QueryAggregateVoteResponse is response type for the
      Query/AggregateVote RPC method.
  umee.oracle.v1.QueryAggregateVotesResponse:
    type: object
    properties:
      aggregate_votes:
        type: array
        items:
          type: object
          properties:
            exchange_rate_tuples:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  exchange_rate:
                    type: string
                title: >-
                  ExchangeRateTuple - struct to store interpreted exchange rates
                  data to store
            voter:
              type: string
          description: |-
            AggregateExchangeRateVote - struct for voting on
            the exchange rates of USD denominated in various assets.
        title: >-
          aggregate_votes defines all oracle aggregate votes submitted in the
          current

          vote period
    description: |-
      QueryAggregateVotesResponse is response type for the
      Query/AggregateVotes RPC method.
  umee.oracle.v1.QueryAvgPriceResponse:
    type: object
    properties:
      price:
        type: string
    title: QueryAvgPriceResponse is a response type for AvgPrice method
  umee.oracle.v1.QueryExchangeRatesResponse:
    type: object
    properties:
      exchange_rates:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: |-
          exchange_rates defines a list of the exchange rate for all whitelisted
          denoms.
    description: |-
      QueryExchangeRatesResponse is response type for the
      Query/ExchangeRates RPC method.
  umee.oracle.v1.QueryFeederDelegationResponse:
    type: object
    properties:
      feeder_addr:
        type: string
        title: feeder_addr defines the feeder delegation of a validator
    description: |-
      QueryFeederDelegationResponse is response type for the
      Query/FeederDelegation RPC method.
  umee.oracle.v1.QueryMedianDeviationsResponse:
    type: object
    properties:
      medianDeviations:
        type: array
        items:
          type: object
          properties:
            exchange_rate_tuple:
              type: object
              properties:
                denom:
                  type: string
                exchange_rate:
                  type: string
              title: >-
                ExchangeRateTuple - struct to store interpreted exchange rates
                data to store
            block_num:
              type: string
              format: uint64
          title: Price is an instance of a price "stamp"
        description: >-
          medians defines a list of the median deviations for all stamped
          denoms.
    description: |-
      QueryMedianDeviationsResponse is response type for the
      Query/MedianDeviations RPC method.
  umee.oracle.v1.QueryMediansResponse:
    type: object
    properties:
      medians:
        type: array
        items:
          type: object
          properties:
            exchange_rate_tuple:
              type: object
              properties:
                denom:
                  type: string
                exchange_rate:
                  type: string
              title: >-
                ExchangeRateTuple - struct to store interpreted exchange rates
                data to store
            block_num:
              type: string
              format: uint64
          title: Price is an instance of a price "stamp"
        description: medians defines a list of the medians for all stamped denoms.
    description: |-
      QueryMediansResponse is response type for the
      Query/Medians RPC method.
  umee.oracle.v1.QueryMissCounterResponse:
    type: object
    properties:
      miss_counter:
        type: string
        format: uint64
        title: miss_counter defines the oracle miss counter of a validator
    description: |-
      QueryMissCounterResponse is response type for the
      Query/MissCounter RPC method.
  umee.oracle.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          vote_period:
            type: string
            format: uint64
          vote_threshold:
            type: string
          reward_band:
            type: string
          reward_distribution_window:
            type: string
            format: uint64
          accept_list:
            type: array
            items:
              type: object
              properties:
                base_denom:
                  type: string
                symbol_denom:
                  type: string
                exponent:
                  type: integer
                  format: int64
              title: Denom - the object to hold configurations of each denom
          slash_fraction:
            type: string
          slash_window:
            type: string
            format: uint64
          min_valid_per_window:
            type: string
          historic_stamp_period:
            type: string
            format: uint64
            description: |-
              Historic Stamp Period represents the amount of blocks the oracle
              module waits before recording a new historic price.
          median_stamp_period:
            type: string
            format: uint64
            description: |-
              Median Stamp Period represents the amount blocks the oracle module
              waits between calculating and stamping a new median and standard
              deviation of that median.
          maximum_price_stamps:
            type: string
            format: uint64
            description: >-
              Maximum Price Stamps represents the maximum amount of historic
              prices

              the oracle module will store before pruning via FIFO.
          maximum_median_stamps:
            type: string
            format: uint64
            description: |-
              Maximum Median Stamps represents the maximum amount of medians the
              oracle module will store before pruning via FIFO.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  umee.oracle.v1.QuerySlashWindowResponse:
    type: object
    properties:
      window_progress:
        type: string
        format: uint64
        description: |-
          window_progress defines the number of voting periods
          since the last slashing event would have taken place.
    description: |-
      QuerySlashWindowResponse is response type for the
      Query/SlashWindow RPC method.
  umee.uibc.v1.IBCTransferStatus:
    type: string
    enum:
      - IBC_TRANSFER_STATUS_UNSPECIFIED
      - IBC_TRANSFER_STATUS_QUOTA_DISABLED
      - IBC_TRANSFER_STATUS_QUOTA_ENABLED
      - IBC_TRANSFER_STATUS_QUOTA_OUT_DISABLED
      - IBC_TRANSFER_STATUS_QUOTA_IN_DISABLED
      - IBC_TRANSFER_STATUS_TRANSFERS_PAUSED
    default: IBC_TRANSFER_STATUS_UNSPECIFIED
    description: |-
      - IBC_TRANSFER_STATUS_UNSPECIFIED: UNSPECIFIED  defines a no-op status.
       - IBC_TRANSFER_STATUS_QUOTA_DISABLED: DISABLED: all inflow and outflow quota checks are disabled.
       - IBC_TRANSFER_STATUS_QUOTA_ENABLED: ENABLED: all inflow and outflow quota checks are enabled.
       - IBC_TRANSFER_STATUS_QUOTA_OUT_DISABLED: DISABLED OUT: outflow quota check is disabled, while the inflow quota check is enabled.
       - IBC_TRANSFER_STATUS_QUOTA_IN_DISABLED: DISABLED IN: inflow quota check is disabled, while the outflow quota check is enabled.
       - IBC_TRANSFER_STATUS_TRANSFERS_PAUSED: PAUSED: all IBC transfers are paused.
    title: >-
      IBCTransferStatus status of ibc-transfer quota check for inflow and
      outflow
  umee.uibc.v1.Params:
    type: object
    properties:
      ibc_status:
        description: >-
          ibc_status defines the IBC ICS20 status (transfer quota or transfers
          disabled).
        type: string
        enum:
          - IBC_TRANSFER_STATUS_UNSPECIFIED
          - IBC_TRANSFER_STATUS_QUOTA_DISABLED
          - IBC_TRANSFER_STATUS_QUOTA_ENABLED
          - IBC_TRANSFER_STATUS_QUOTA_OUT_DISABLED
          - IBC_TRANSFER_STATUS_QUOTA_IN_DISABLED
          - IBC_TRANSFER_STATUS_TRANSFERS_PAUSED
        default: IBC_TRANSFER_STATUS_UNSPECIFIED
        title: >-
          IBCTransferStatus status of ibc-transfer quota check for inflow and
          outflow
      total_quota:
        type: string
        title: total_quota defines the total outflow limit of ibc-transfer in USD
      token_quota:
        type: string
        title: token_quota defines the outflow limit per token in USD
      quota_duration:
        type: string
        title: >-
          quota_duration defines quota expires for each ibc-transfer denom in
          seconds
    title: Params of x/uibc module
  umee.uibc.v1.QueryAllOutflowsResponse:
    type: object
    properties:
      outflows:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    title: QueryOutflowResponse defines response type of Query/Outflow
  umee.uibc.v1.QueryOutflowsResponse:
    type: object
    properties:
      amount:
        type: string
    title: QueryOutflowResponse defines response type of Query/Outflow
  umee.uibc.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          ibc_status:
            description: >-
              ibc_status defines the IBC ICS20 status (transfer quota or
              transfers disabled).
            type: string
            enum:
              - IBC_TRANSFER_STATUS_UNSPECIFIED
              - IBC_TRANSFER_STATUS_QUOTA_DISABLED
              - IBC_TRANSFER_STATUS_QUOTA_ENABLED
              - IBC_TRANSFER_STATUS_QUOTA_OUT_DISABLED
              - IBC_TRANSFER_STATUS_QUOTA_IN_DISABLED
              - IBC_TRANSFER_STATUS_TRANSFERS_PAUSED
            default: IBC_TRANSFER_STATUS_UNSPECIFIED
            title: >-
              IBCTransferStatus status of ibc-transfer quota check for inflow
              and outflow
          total_quota:
            type: string
            title: total_quota defines the total outflow limit of ibc-transfer in USD
          token_quota:
            type: string
            title: token_quota defines the outflow limit per token in USD
          quota_duration:
            type: string
            title: >-
              quota_duration defines quota expires for each ibc-transfer denom
              in seconds
        title: Params of x/uibc module
    description: |-
      QueryParamsResponse defines the response structure for the Params gRPC
      service handler.
  umee.ugov.v1.InflationParams:
    type: object
    properties:
      max_supply:
        description: max_supply is the maximum supply for liquidation.
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
      inflation_cycle:
        type: string
        description: inflation_cycle duration after which inflation rates are changed.
      inflation_reduction_rate:
        type: integer
        format: int64
        description: inflation_reduction_rate for every inflation cycle.
    description: >-
      InflationParams params for changing the inflation min rate and max rate of
      mint module params.
  umee.ugov.v1.QueryEmergencyGroupResponse:
    type: object
    properties:
      emergency_group:
        type: string
    description: QueryEmergencyGroupResponse response type.
  umee.ugov.v1.QueryInflationCycleEndResponse:
    type: object
    properties:
      end:
        type: string
        format: date-time
    description: QueryInflationCycleEndResponse response type.
  umee.ugov.v1.QueryInflationParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          max_supply:
            description: max_supply is the maximum supply for liquidation.
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
          inflation_cycle:
            type: string
            description: inflation_cycle duration after which inflation rates are changed.
          inflation_reduction_rate:
            type: integer
            format: int64
            description: inflation_reduction_rate for every inflation cycle.
        description: >-
          InflationParams params for changing the inflation min rate and max
          rate of mint module params.
    description: QueryInflationParamsResponse response type.
  umee.ugov.v1.QueryMinGasPriceResponse:
    type: object
    properties:
      min_gas_price:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          DecCoin defines a token with a denomination and a decimal amount.

          NOTE: The amount field is an Dec which implements the custom method
          signatures required by gogoproto.
    description: QueryMinGasPriceResponse response type.
  umee.incentive.v1.IncentiveProgram:
    type: object
    properties:
      ID:
        type: integer
        format: int64
        description: >-
          ID uniquely identifies the incentive program after it has been
          created.

          It is zero when the program is being proposed by governance, and is
          set

          to its final value when the proposal passes.
      start_time:
        type: string
        format: int64
        description: >-
          start_time is the unix time (in seconds) at which the incentives
          begin.

          If a program is passed after its intended start time, its start time

          will be increased to the current time, with program duration
          unchanged.
      duration:
        type: string
        format: int64
        description: |-
          duration is the length of the incentive program from start time to
          completion in seconds.
      uToken:
        type: string
        description: >-
          uToken is the incentivized uToken collateral denom. Suppliers who
          collateralize

          this asset then bond it to the incentive module are eligible for this
          program's

          rewards.
      funded:
        type: boolean
        description: >-
          funded indicates whether a program bas been funded. This can happen
          when

          a program passes if funding from community fund, or any time before
          the

          program's start time if funding with MsgSponsor. A program that
          reaches

          its start time without being funded is cancelled.
      total_rewards:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      remaining_rewards:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: |-
      IncentiveProgram defines a liquidity mining incentive program on a single
      locked uToken denom that will run for a set amount of time.
  umee.incentive.v1.Params:
    type: object
    properties:
      max_unbondings:
        type: integer
        format: int64
        description: >-
          max_unbondings is the maximum amount of concurrent unbondings an
          address can have

          of each bonded uToken denom. Zero is interpreted as no limit.
      unbonding_duration:
        type: string
        format: int64
        description: unbonding_duration is the unbonding duration (in seconds).
      emergency_unbond_fee:
        type: string
        description: >-
          emergency_unbond_fee is the portion of a bond that is paid when it is
          instantly

          released using MsgEmergencyUnbond. For example, 0.01 is a 1% fee.
          Ranges 0-1.
    description: Params defines the parameters for the incentive module.
  umee.incentive.v1.QueryAccountBondsResponse:
    type: object
    properties:
      bonded:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      unbonding:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      unbondings:
        type: array
        items:
          type: object
          properties:
            start:
              type: string
              format: int64
            end:
              type: string
              format: int64
            uToken:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: |-
            Unbonding is a structure that tracks an in-progress token unbonding.
            It tracks both its start time and end time, so that if the module's
            unbonding time changes, the unbonding can complete at the earlier of
            its original end time or its new one based on the new parameter.
    description: >-
      QueryAccountBondsResponse defines the response structure for the
      AccountBonds gRPC service handler.
  umee.incentive.v1.QueryActualRatesResponse:
    type: object
    properties:
      APY:
        type: string
        description: APY is the oracle price-adjusted APY of the bonded uToken.
    description: >-
      QueryActualRatesResponse defines the response structure for the
      ActualRates gRPC service handler.
  umee.incentive.v1.QueryCompletedIncentiveProgramsResponse:
    type: object
    properties:
      programs:
        type: array
        items:
          type: object
          properties:
            ID:
              type: integer
              format: int64
              description: >-
                ID uniquely identifies the incentive program after it has been
                created.

                It is zero when the program is being proposed by governance, and
                is set

                to its final value when the proposal passes.
            start_time:
              type: string
              format: int64
              description: >-
                start_time is the unix time (in seconds) at which the incentives
                begin.

                If a program is passed after its intended start time, its start
                time

                will be increased to the current time, with program duration
                unchanged.
            duration:
              type: string
              format: int64
              description: >-
                duration is the length of the incentive program from start time
                to

                completion in seconds.
            uToken:
              type: string
              description: >-
                uToken is the incentivized uToken collateral denom. Suppliers
                who collateralize

                this asset then bond it to the incentive module are eligible for
                this program's

                rewards.
            funded:
              type: boolean
              description: >-
                funded indicates whether a program bas been funded. This can
                happen when

                a program passes if funding from community fund, or any time
                before the

                program's start time if funding with MsgSponsor. A program that
                reaches

                its start time without being funded is cancelled.
            total_rewards:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            remaining_rewards:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            IncentiveProgram defines a liquidity mining incentive program on a
            single

            locked uToken denom that will run for a set amount of time.
    description: >-
      QueryCompletedIncentiveProgramsResponse defines the response structure for
      the

      CompletedIncentivePrograms gRPC service handler.
  umee.incentive.v1.QueryCurrentRatesResponse:
    type: object
    properties:
      reference_bond:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Rewards are the amount of base token rewards that the reference amount
          of bonded uTokens would earn

          if current rates continued for a full year.
    description: >-
      QueryCurrentRatesResponse defines the response structure for the
      CurrentRates gRPC service handler.
  umee.incentive.v1.QueryIncentiveProgramResponse:
    type: object
    properties:
      program:
        type: object
        properties:
          ID:
            type: integer
            format: int64
            description: >-
              ID uniquely identifies the incentive program after it has been
              created.

              It is zero when the program is being proposed by governance, and
              is set

              to its final value when the proposal passes.
          start_time:
            type: string
            format: int64
            description: >-
              start_time is the unix time (in seconds) at which the incentives
              begin.

              If a program is passed after its intended start time, its start
              time

              will be increased to the current time, with program duration
              unchanged.
          duration:
            type: string
            format: int64
            description: |-
              duration is the length of the incentive program from start time to
              completion in seconds.
          uToken:
            type: string
            description: >-
              uToken is the incentivized uToken collateral denom. Suppliers who
              collateralize

              this asset then bond it to the incentive module are eligible for
              this program's

              rewards.
          funded:
            type: boolean
            description: >-
              funded indicates whether a program bas been funded. This can
              happen when

              a program passes if funding from community fund, or any time
              before the

              program's start time if funding with MsgSponsor. A program that
              reaches

              its start time without being funded is cancelled.
          total_rewards:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          remaining_rewards:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
        description: >-
          IncentiveProgram defines a liquidity mining incentive program on a
          single

          locked uToken denom that will run for a set amount of time.
    description: |-
      QueryIncentivePrograResponse defines the response structure for the
      IncentiveProgram gRPC service handler.
  umee.incentive.v1.QueryLastRewardTimeResponse:
    type: object
    properties:
      time:
        type: string
        format: int64
    description: >-
      QueryLastRewardTimeResponse defines the response structure for the
      LastRewardTime gRPC

      service handler.
  umee.incentive.v1.QueryOngoingIncentiveProgramsResponse:
    type: object
    properties:
      programs:
        type: array
        items:
          type: object
          properties:
            ID:
              type: integer
              format: int64
              description: >-
                ID uniquely identifies the incentive program after it has been
                created.

                It is zero when the program is being proposed by governance, and
                is set

                to its final value when the proposal passes.
            start_time:
              type: string
              format: int64
              description: >-
                start_time is the unix time (in seconds) at which the incentives
                begin.

                If a program is passed after its intended start time, its start
                time

                will be increased to the current time, with program duration
                unchanged.
            duration:
              type: string
              format: int64
              description: >-
                duration is the length of the incentive program from start time
                to

                completion in seconds.
            uToken:
              type: string
              description: >-
                uToken is the incentivized uToken collateral denom. Suppliers
                who collateralize

                this asset then bond it to the incentive module are eligible for
                this program's

                rewards.
            funded:
              type: boolean
              description: >-
                funded indicates whether a program bas been funded. This can
                happen when

                a program passes if funding from community fund, or any time
                before the

                program's start time if funding with MsgSponsor. A program that
                reaches

                its start time without being funded is cancelled.
            total_rewards:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            remaining_rewards:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            IncentiveProgram defines a liquidity mining incentive program on a
            single

            locked uToken denom that will run for a set amount of time.
    description: >-
      QueryOngoingIncentiveProgramsResponse defines the response structure for
      the

      OngoingIncentivePrograms and UpcomingIncentivePrograms gRPC service
      handlers.
  umee.incentive.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          max_unbondings:
            type: integer
            format: int64
            description: >-
              max_unbondings is the maximum amount of concurrent unbondings an
              address can have

              of each bonded uToken denom. Zero is interpreted as no limit.
          unbonding_duration:
            type: string
            format: int64
            description: unbonding_duration is the unbonding duration (in seconds).
          emergency_unbond_fee:
            type: string
            description: >-
              emergency_unbond_fee is the portion of a bond that is paid when it
              is instantly

              released using MsgEmergencyUnbond. For example, 0.01 is a 1% fee.
              Ranges 0-1.
        description: Params defines the parameters for the incentive module.
    description: |-
      QueryParamsResponse defines the response structure for the Params gRPC
      service handler.
  umee.incentive.v1.QueryPendingRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: >-
      QueryPendingRewardsResponse defines the response structure for the
      PendingRewards gRPC service handler.
  umee.incentive.v1.QueryTotalBondedResponse:
    type: object
    properties:
      bonded:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: >-
      QueryTotalBondedResponse defines the response structure for the
      TotalBonded gRPC service handler.
  umee.incentive.v1.QueryTotalUnbondingResponse:
    type: object
    properties:
      unbonding:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: >-
      QueryTotalUnbondingResponse defines the response structure for the
      TotalUnbonding gRPC service handler.
  umee.incentive.v1.QueryUpcomingIncentiveProgramsResponse:
    type: object
    properties:
      programs:
        type: array
        items:
          type: object
          properties:
            ID:
              type: integer
              format: int64
              description: >-
                ID uniquely identifies the incentive program after it has been
                created.

                It is zero when the program is being proposed by governance, and
                is set

                to its final value when the proposal passes.
            start_time:
              type: string
              format: int64
              description: >-
                start_time is the unix time (in seconds) at which the incentives
                begin.

                If a program is passed after its intended start time, its start
                time

                will be increased to the current time, with program duration
                unchanged.
            duration:
              type: string
              format: int64
              description: >-
                duration is the length of the incentive program from start time
                to

                completion in seconds.
            uToken:
              type: string
              description: >-
                uToken is the incentivized uToken collateral denom. Suppliers
                who collateralize

                this asset then bond it to the incentive module are eligible for
                this program's

                rewards.
            funded:
              type: boolean
              description: >-
                funded indicates whether a program bas been funded. This can
                happen when

                a program passes if funding from community fund, or any time
                before the

                program's start time if funding with MsgSponsor. A program that
                reaches

                its start time without being funded is cancelled.
            total_rewards:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            remaining_rewards:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            IncentiveProgram defines a liquidity mining incentive program on a
            single

            locked uToken denom that will run for a set amount of time.
    description: >-
      QueryUpcomingIncentiveProgramsResponse defines the response structure for
      the

      OngoingIncentivePrograms and UpcomingIncentivePrograms gRPC service
      handlers.
  umee.incentive.v1.Unbonding:
    type: object
    properties:
      start:
        type: string
        format: int64
      end:
        type: string
        format: int64
      uToken:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: |-
      Unbonding is a structure that tracks an in-progress token unbonding.
      It tracks both its start time and end time, so that if the module's
      unbonding time changes, the unbonding can complete at the earlier of
      its original end time or its new one based on the new parameter.
  umeenetwork.umee.metoken.v1.AcceptedAsset:
    type: object
    properties:
      denom:
        type: string
        description: |-
          Denom is the denomination of the underlying asset. Must be the base
          denom as registered in the Bank module (so IBC denom for IBC tokens).
      reserve_portion:
        type: string
        description: >-
          Reserve portion is the portion of swapped assets that will be kept in
          the metoken module as reserves,

          instead of supplied to the leverage module. It is also the

          portion that will be taken from metoken module reserves when a
          redemption occurs.

          Valid values: 0-1.
      target_allocation:
        type: string
        description: >-
          Target allocation is the portion of an accepted asset the Index is
          targeting to have. The sum of

          target allocations of every accepted asset in the Index should be
          equal to 1.

          Valid values: 0-1.
    title: >-
      AcceptedAsset is an asset that is accepted to participate in the Index's
      swaps and redemptions, along with its

      metadata and parameters
  umeenetwork.umee.metoken.v1.AssetBalance:
    type: object
    properties:
      denom:
        type: string
      leveraged:
        type: string
      reserved:
        type: string
      fees:
        type: string
      interest:
        type: string
    description: >-
      AssetBalance tracks how much of a single asset is held in leverage,
      reserves, fees and interest account.
  umeenetwork.umee.metoken.v1.Fee:
    type: object
    properties:
      min_fee:
        type: string
        description: >-
          Min fee is the minimum fee to be charged to the user. The applied fee
          will tend to decrease down to this value,

          when the accepted asset is undersupplied in the index. It must be less
          than Balanced and Max fees.

          Valid values: 0-1.
      balanced_fee:
        type: string
        description: >-
          Balanced fee is the fee to be charged to the user when the index is
          balanced. It must be greater than min_fee and

          lower than max_fee

          Valid values: 0-1.
      max_fee:
        type: string
        description: >-
          Max fee is the maximum fee to be charged to the user. The applied fee
          will tend to increase up to this value,

          when the accepted asset is oversupplied in the index. It must be
          greater than Min and Balanced fee.

          Valid values: 0-1.
    title: >-
      Fee are the parameters used for the calculation of the fee to be applied
      for swaps and redemptions and charged to

      the user. The usage of these parameters is explained here:

      https://github.com/umee-network/umee/tree/main/x/metoken#dynamic-fee
  umeenetwork.umee.metoken.v1.Index:
    type: object
    properties:
      denom:
        type: string
        description: >-
          Denom is the denomination of the Index's meToken denom that will be
          given to user in exchange of accepted

          assets.
      max_supply:
        type: string
        description: >-
          MaxSupply is the maximum amount of Index's meTokens can be minted.

          A swap that requires to mint more Index's meToken than this value will
          result in an error.

          Must be a non negative value. 0 means that there is no limit.
      exponent:
        type: integer
        format: int64
        description: |-
          Exponent is the power of ten by which to multiply, in order to convert
          an amount of the meToken for the exchange operations.
          Valid value: must be the same as the oracle.Denom.exponent.
      fee:
        description: >-
          Fee contains fee parameters used for swap and redemption fee
          calculations for all underlying

          assets in this index.
        type: object
        properties:
          min_fee:
            type: string
            description: >-
              Min fee is the minimum fee to be charged to the user. The applied
              fee will tend to decrease down to this value,

              when the accepted asset is undersupplied in the index. It must be
              less than Balanced and Max fees.

              Valid values: 0-1.
          balanced_fee:
            type: string
            description: >-
              Balanced fee is the fee to be charged to the user when the index
              is balanced. It must be greater than min_fee and

              lower than max_fee

              Valid values: 0-1.
          max_fee:
            type: string
            description: >-
              Max fee is the maximum fee to be charged to the user. The applied
              fee will tend to increase up to this value,

              when the accepted asset is oversupplied in the index. It must be
              greater than Min and Balanced fee.

              Valid values: 0-1.
        title: >-
          Fee are the parameters used for the calculation of the fee to be
          applied for swaps and redemptions and charged to

          the user. The usage of these parameters is explained here:

          https://github.com/umee-network/umee/tree/main/x/metoken#dynamic-fee
      accepted_assets:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: >-
                Denom is the denomination of the underlying asset. Must be the
                base

                denom as registered in the Bank module (so IBC denom for IBC
                tokens).
            reserve_portion:
              type: string
              description: >-
                Reserve portion is the portion of swapped assets that will be
                kept in the metoken module as reserves,

                instead of supplied to the leverage module. It is also the

                portion that will be taken from metoken module reserves when a
                redemption occurs.

                Valid values: 0-1.
            target_allocation:
              type: string
              description: >-
                Target allocation is the portion of an accepted asset the Index
                is targeting to have. The sum of

                target allocations of every accepted asset in the Index should
                be equal to 1.

                Valid values: 0-1.
          title: >-
            AcceptedAsset is an asset that is accepted to participate in the
            Index's swaps and redemptions, along with its

            metadata and parameters
        description: >-
          Accepted Assets is the list of underlying Tokens that can be swapped
          and redeemed for the Index's meToken,

          along with their token-specific parameters.
    description: >-
      Index defines an index of assets that are allowed to swap and redeem for
      the Index's meToken,

      along with its metadata and parameters.
  umeenetwork.umee.metoken.v1.IndexBalances:
    type: object
    properties:
      metoken_supply:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      asset_balances:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            leveraged:
              type: string
            reserved:
              type: string
            fees:
              type: string
            interest:
              type: string
          description: >-
            AssetBalance tracks how much of a single asset is held in leverage,
            reserves, fees and interest account.
    description: >-
      IndexBalances is the state of an Index, containing its meToken supply and
      all underlying asset balances.
  umeenetwork.umee.metoken.v1.Params:
    type: object
    properties:
      rebalancing_frequency:
        type: string
        format: int64
        title: >-
          Reserves Re-balancing Frequency in seconds, determines how often the
          re-balancing of the module reserves will be

          triggered
      claiming_frequency:
        type: string
        format: int64
        title: >-
          Interest claiming frequency in seconds, determines how often metoken
          module will claim accrued interest from

          leverage module
    description: Params defines the parameters for the metoken module.
  umeenetwork.umee.metoken.v1.Price:
    type: object
    properties:
      denom:
        type: string
        description: meToken denom.
      price:
        type: string
        description: Price in USD of one unit of meToken, expressed in decimals.
      exponent:
        type: integer
        format: int64
        description: |-
          Exponent is the power of ten by which to multiply, in order to convert
          an amount of the meToken for the exchange operations.
    description: Price is used to inform meToken price and exponent.
  umeenetwork.umee.metoken.v1.QueryIndexBalancesResponse:
    type: object
    properties:
      index_balances:
        type: array
        items:
          type: object
          properties:
            metoken_supply:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            asset_balances:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  leveraged:
                    type: string
                  reserved:
                    type: string
                  fees:
                    type: string
                  interest:
                    type: string
                description: >-
                  AssetBalance tracks how much of a single asset is held in
                  leverage, reserves, fees and interest account.
          description: >-
            IndexBalances is the state of an Index, containing its meToken
            supply and all underlying asset balances.
    description: >-
      QueryIndexBalanceResponse defines the response structure for the
      IndexBalances gRPC service handler.
  umeenetwork.umee.metoken.v1.QueryIndexPriceResponse:
    type: object
    properties:
      prices:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: meToken denom.
            price:
              type: string
              description: Price in USD of one unit of meToken, expressed in decimals.
            exponent:
              type: integer
              format: int64
              description: >-
                Exponent is the power of ten by which to multiply, in order to
                convert

                an amount of the meToken for the exchange operations.
          description: Price is used to inform meToken price and exponent.
    description: >-
      QueryIndexPriceResponse defines the response structure for the IndexPrice
      gRPC service handler.
  umeenetwork.umee.metoken.v1.QueryIndexesResponse:
    type: object
    properties:
      registry:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: >-
                Denom is the denomination of the Index's meToken denom that will
                be given to user in exchange of accepted

                assets.
            max_supply:
              type: string
              description: >-
                MaxSupply is the maximum amount of Index's meTokens can be
                minted.

                A swap that requires to mint more Index's meToken than this
                value will result in an error.

                Must be a non negative value. 0 means that there is no limit.
            exponent:
              type: integer
              format: int64
              description: >-
                Exponent is the power of ten by which to multiply, in order to
                convert

                an amount of the meToken for the exchange operations.

                Valid value: must be the same as the oracle.Denom.exponent.
            fee:
              description: >-
                Fee contains fee parameters used for swap and redemption fee
                calculations for all underlying

                assets in this index.
              type: object
              properties:
                min_fee:
                  type: string
                  description: >-
                    Min fee is the minimum fee to be charged to the user. The
                    applied fee will tend to decrease down to this value,

                    when the accepted asset is undersupplied in the index. It
                    must be less than Balanced and Max fees.

                    Valid values: 0-1.
                balanced_fee:
                  type: string
                  description: >-
                    Balanced fee is the fee to be charged to the user when the
                    index is balanced. It must be greater than min_fee and

                    lower than max_fee

                    Valid values: 0-1.
                max_fee:
                  type: string
                  description: >-
                    Max fee is the maximum fee to be charged to the user. The
                    applied fee will tend to increase up to this value,

                    when the accepted asset is oversupplied in the index. It
                    must be greater than Min and Balanced fee.

                    Valid values: 0-1.
              title: >-
                Fee are the parameters used for the calculation of the fee to be
                applied for swaps and redemptions and charged to

                the user. The usage of these parameters is explained here:

                https://github.com/umee-network/umee/tree/main/x/metoken#dynamic-fee
            accepted_assets:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: >-
                      Denom is the denomination of the underlying asset. Must be
                      the base

                      denom as registered in the Bank module (so IBC denom for
                      IBC tokens).
                  reserve_portion:
                    type: string
                    description: >-
                      Reserve portion is the portion of swapped assets that will
                      be kept in the metoken module as reserves,

                      instead of supplied to the leverage module. It is also the

                      portion that will be taken from metoken module reserves
                      when a redemption occurs.

                      Valid values: 0-1.
                  target_allocation:
                    type: string
                    description: >-
                      Target allocation is the portion of an accepted asset the
                      Index is targeting to have. The sum of

                      target allocations of every accepted asset in the Index
                      should be equal to 1.

                      Valid values: 0-1.
                title: >-
                  AcceptedAsset is an asset that is accepted to participate in
                  the Index's swaps and redemptions, along with its

                  metadata and parameters
              description: >-
                Accepted Assets is the list of underlying Tokens that can be
                swapped and redeemed for the Index's meToken,

                along with their token-specific parameters.
          description: >-
            Index defines an index of assets that are allowed to swap and redeem
            for the Index's meToken,

            along with its metadata and parameters.
    description: >-
      QueryIndexesResponse defines the response structure for the Indexes gRPC
      service handler.
  umeenetwork.umee.metoken.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          rebalancing_frequency:
            type: string
            format: int64
            title: >-
              Reserves Re-balancing Frequency in seconds, determines how often
              the re-balancing of the module reserves will be

              triggered
          claiming_frequency:
            type: string
            format: int64
            title: >-
              Interest claiming frequency in seconds, determines how often
              metoken module will claim accrued interest from

              leverage module
        description: Params defines the parameters for the metoken module.
    description: |-
      QueryParamsResponse defines the response structure for the Params gRPC
      service handler.
  umeenetwork.umee.metoken.v1.QueryRedeemFeeResponse:
    type: object
    properties:
      asset:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QueryRedeemFeeResponse defines the response structure for the RedeemFee
      gRPC service handler.
  umeenetwork.umee.metoken.v1.QuerySwapFeeResponse:
    type: object
    properties:
      asset:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QuerySwapFeeResponse defines the response structure for the SwapFee gRPC
      service handler.
