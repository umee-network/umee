swagger: '2.0'
info:
  title: Umee SDK - gRPC Gateway docs
  description: A REST interface for state queries
  version: 1.0.0
paths:
  /umee/leverage/v1/account_balances:
    get:
      summary: >-
        AccountBalances queries an account's current supply, collateral, and
        borrow positions.
      operationId: AccountBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supplied:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Supplied contains all tokens the account has supplied,
                  including interest earned. It is denominated in base tokens,
                  so exponent from each coin's registered_tokens entry must be
                  applied to convert to symbol denom.
              collateral:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Collateral contains all uTokens the account has
                  collateralized. It is denominated in uTokens, so both exponent
                  and uToken exchange rate from each coin's market_summary must
                  be applied to convert to base token symbol denom.
              borrowed:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  Borrowed contains all tokens the account has borrowed,
                  including interest owed. It is denominated in base tokens, so
                  exponent from each coin's registered_tokens entry must be
                  applied to convert to symbol denom.
            description: >-
              QueryAccountBalancesResponse defines the response structure for
              the AccountBalances gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/account_summary:
    get:
      summary: >-
        AccountSummary queries USD values representing an account's total
        positions and borrowing limits. It requires oracle prices to return
        successfully.
      operationId: AccountSummary
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supplied_value:
                type: string
                description: >-
                  Supplied Value is the sum of the USD value of all tokens the
                  account has supplied, includng interest earned.
              collateral_value:
                type: string
                description: >-
                  Collateral Value is the sum of the USD value of all uTokens
                  the account has collateralized.
              borrowed_value:
                type: string
                description: >-
                  Borrowed Value is the sum of the USD value of all tokens the
                  account has borrowed, including interest owed.
              borrow_limit:
                type: string
                description: >-
                  Borrow Limit is the maximum Borrowed Value the account is
                  allowed to reach through direct borrowing.
              liquidation_threshold:
                type: string
                description: >-
                  Liquidation Threshold is the Borrowed Value at which the
                  account becomes eligible for liquidation.
            description: >-
              QueryAccountSummaryResponse defines the response structure for the
              AccountSummary gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/bad_debts:
    get:
      summary: >-
        BadDebts queries a list of borrow positions that have been marked for
        bad debt repayment.
      operationId: BadDebts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              targets:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    denom:
                      type: string
                  description: >-
                    BadDebt is a bad debt instance used in the leverage module's
                    genesis state.
                description: >-
                  Targets are borrow positions currently marked for bad debt
                  repayment. Each contains an Address and a Denom.
            description: >-
              QueryBadDebtsResponse defines the response structure for the
              BedDebts gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/leverage/v1/liquidation_targets:
    get:
      summary: >-
        LiquidationTargets queries a list of all borrower account addresses
        eligible for liquidation.
      operationId: LiquidationTargets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              targets:
                type: array
                items:
                  type: string
                description: >-
                  Targets are the addresses of borrowers eligible for
                  liquidation.
            description: >-
              QueryLiquidationTargetsResponse defines the response structure for
              the LiquidationTargets gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/leverage/v1/market_summary:
    get:
      summary: >-
        MarketSummary queries a base asset's current borrowing and supplying
        conditions.
      operationId: MarketSummary
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              symbol_denom:
                type: string
                description: >-
                  Symbol Denom is the human-readable representation of a token
                  denom, for example "UMEE" or "ATOM".
              exponent:
                type: integer
                format: int64
                description: >-
                  Exponent is the power of ten required to get from base denom
                  to symbol denom. For example, an exponent of 6 means 10^6
                  uumee = 1 UMEE.
              oracle_price:
                type: string
                description: >-
                  Oracle Price is the current USD value of a base token.
                  Exponent must be applied to reach the price from symbol_denom.
                  For example, a price of $0.000001 for 1 uumee is equivalent to
                  $1.00 for 1 UMEE. Oracle price is nil when the oracle is down.
              uToken_exchange_rate:
                type: string
                description: >-
                  uToken Exchange Rate is the amount of base tokens received
                  when withdrawing 1 uToken. For example, a uToken exchange rate
                  of 1.5 means a supplier receives 3 uumee for every 2 u/uumee
                  they wish to withdraw. The same applies in reverse: supplying
                  3 uumee would award 2 u/uumee at that time.
              supply_APY:
                type: string
                description: >-
                  Supply APY is the current interest rate suppliers are
                  receiving for their deposits. For example, 0.11 would mean 11%
                  APY. Supply APY is always less than borrow APY.
              borrow_APY:
                type: string
                description: >-
                  Borrow APY is the current interest rate borrowers are being
                  charged on their loans. For example, 0.2 would mean 20% APY.
              supplied:
                type: string
                description: >-
                  Supplied is the total amount of tokens supplied to the the
                  system by all suppliers, including any interest earned. This
                  includes that tokens which have been borrowed out or enabled
                  as collateral, but excludes reserves. Supplied is denominated
                  in base tokens, so exponent must be applied to convert to
                  symbol denom.
              reserved:
                type: string
                description: >-
                  Reserved is the total amount of tokens held in reserve by the
                  module for emergencies. Reserves are always excluded from
                  total supply, borrow, collateral, and liqduidity queries.
                  Reserves are denominated in base tokens, so exponent must be
                  applied to convert to symbol denom.
              collateral:
                type: string
                description: >-
                  Collateral is the total amount of uTokens collateralized by
                  all borrowers. Collateral is denominated in uTokenso, so both
                  uToken exchange rate and exponent must also be applied to
                  convert to symbol denom. For example, if collateral is 4000000
                  u/uumee and uToken exhange rate is 1.2, then 5 UMEE have been
                  collateralized.
              borrowed:
                type: string
                description: >-
                  Borrowed is the total amount of debt in this token held across
                  all borrowers. It is denominated in base tokens, so exponent
                  must be applied to convert to symbol denom.
              liquidity:
                type: string
                description: >-
                  Liquidity is the amount of a token that has been supplied but
                  not yet borrowed or reserved. It is denominated in base
                  tokens, so exponent must be applied to convert to symbol
                  denom.
              maximum_borrow:
                type: string
                description: >-
                  Maximum Borrow is the amount of a token that is available for
                  borrowing, including that which has already been borrowed out.
                  This amount is less than total supply due to safety limits. It
                  is denominated in base tokens, so exponent must be applied to
                  convert to symbol denom. For example, if borrowed is 3000000
                  uumee and maximum borrow is 4000000 uumee, then 1 UMEE is
                  currently available for borrowing.
              maximum_collateral:
                type: string
                description: >-
                  Maximum Collateral is the amount of a token that can be
                  collateralized, including that which is already collateral.
                  This amount is less than total supply due to safety limits. It
                  is denominated in uTokens, so both uToken exchange rate and
                  exponent must be applied to convert to symbol denom. For
                  example, if collateral is 4000000 u/uumee, uToken exhange rate
                  is 1.2, and maximum borrow is 7000000 uumee, then a maximum of
                  2 additional UMEE is permitted to be collateralized.
              minimum_liquidity:
                type: string
                description: >-
                  Mimimum Liquidity is the minimum amount of liquidity in the
                  module required by safety limits, based on the current
                  collateral. It is denominated in base tokens, so exponent must
                  be applied to convert to symbol denom. For example, if
                  liquidity is 9000000 uumee and minimum liquidity is 8000000
                  uumee, then a maximum of 1 additional UMEE is currently
                  available for borrowing or withdrawal.
              uToken_supply:
                type: string
                description: >-
                  uToken Supply is the total amount of a base token's associated
                  uToken in circulation.
              available_borrow:
                type: string
                description: >-
                  Available Borrow is the maximum additional amount of base
                  tokens than can be borrowed based on current liquidity and
                  system safety limits. It can also be calculated by
                  MIN(maximum_borrow - borrowed, liquidity - minimum_liquidity).
                  It is denominated in base tokens, so exponent must be applied
                  to convert to symbol denom. A negative availability means
                  safety limits have been exceeded and borrowing is temporarily
                  unavailable.
              available_withdraw:
                type: string
                description: >-
                  Available Withdraw is the maximum amount of uTokens than can
                  currently be withdrawn based on liquidity and system safety
                  limits. It can also be calculated by (liquidity -
                  minimum_liquidity). It is denominated in uTokens, so both
                  uToken exchange rate and exponent must be applied to convert
                  to symbol denom. A negative availability means safety limits
                  have been exceeded and withdrawal is temporarily unavailable.
              available_collateralize:
                type: string
                description: >-
                  Available Collateralize is the maximum additional amount of
                  uTokens than can be collateralized based on current liquidity
                  and system safety limits. It can also be calculated by
                  (maximum_collateral, - collateral). It is denominated in
                  uTokens, so both uToken exchange rate and exponent must be
                  applied to convert to symbol denom. A negative availability
                  means safety limits have been exceeded and additional
                  collateral cannot be created until more liquidity is present.
            description: >-
              QueryMarketSummaryResponse defines the response structure for the
              MarketSummary gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /umee/leverage/v1/params:
    get:
      summary: Params queries the parameters of the x/leverage module.
      operationId: LeverageParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  complete_liquidation_threshold:
                    type: string
                    description: >-
                      Complete Liquidation Threshold determines how far between

                      liquidation_threshold (LT) and collateral_value (CV) a
                      borrower's

                      borrowed value must have progressed in order to allow a
                      full liquidation.

                      0.3 indicates 30% of the way from LT to CV.

                      Valid values: 0-1.
                  minimum_close_factor:
                    type: string
                    description: |-
                      borrowed           C := collateral
                                  value                   value
                       --- | ------- | ----- | -------- | ------->
                           L                 CL

                      liquidation = liquidation_threshold * C
                      CL = L + (C-CL) * complete_liquidation_threshold
                         is the borrowed value above which close factor will be 1.

                      Valid values: 0-1.
                    title: >-
                      Close Factor determines the portion of a borrower's
                      position that can be

                      liquidated in a single event. Minimum Close Factor is
                      Close Factor at

                      liquidation_threshold. 0.1 means that that 10% of the
                      borrower position can

                      be liquidated when the borrowed value passes the
                      liquidation_threshold.

                      close_factor scales linearly between minimum_close_factor
                      and 1.0,

                      reaching its maximum when borrowed value passes

                      complete_liquidation_threshold. We can put it into the
                      picture:
                  oracle_reward_factor:
                    type: string
                    description: >-
                      Oracle Reward Factor determines the portion of interest
                      accrued on

                      borrows that is sent to the oracle module to fund its
                      reward pool.

                      Valid values: 0-1.
                  small_liquidation_size:
                    type: string
                    description: >-
                      Small Liquidation Size determines the USD value at which a
                      borrow is

                      considered small enough to be liquidated in a single
                      transaction, bypassing

                      dynamic close factor.
                  direct_liquidation_fee:
                    type: string
                    description: >-
                      Direct Liquidation Fee is a reduction factor in
                      liquidation incentive

                      experienced by liquidators who choose to receive base
                      assets instead of

                      uTokens as liquidation rewards.

                      Valid values: 0-1.
                description: Params defines the parameters for the leverage module.
            description: >-
              QueryParamsResponse defines the response structure for the Params
              gRPC

              service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/leverage/v1/registered_tokens:
    get:
      summary: RegisteredTokens queries for all the registered tokens.
      operationId: RegisteredTokens
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              registry:
                type: array
                items:
                  type: object
                  properties:
                    base_denom:
                      type: string
                      description: >-
                        Base Denom is the denomination of the underlying base
                        token.
                    reserve_factor:
                      type: string
                      description: >-
                        Reserve Factor defines what portion of accrued interest
                        goes to reserves

                        when this token is borrowed.

                        Valid values: 0-1.
                    collateral_weight:
                      type: string
                      description: >-
                        Collateral Weight defines what portion of the total
                        value of the asset

                        can contribute to a users borrowing power. If the
                        collateral weight is

                        zero, using this asset as collateral against borrowing
                        will be disabled.

                        Valid values: 0-1.
                    liquidation_threshold:
                      type: string
                      description: >-
                        Liquidation Threshold defines what amount of the total
                        value of the

                        asset as a collateral can contribute to a user's
                        liquidation threshold

                        (above which they become eligible for liquidation).

                        See also: min_close_factor.

                        Valid values: 0-1.
                    base_borrow_rate:
                      type: string
                      title: >-
                        Base Borrow Rate defines the minimum interest rate for
                        borrowing this

                        asset.

                        Valid values: 0-inf
                    kink_borrow_rate:
                      type: string
                      title: >-
                        Kink Borrow Rate defines the interest rate for borrowing
                        this

                        asset when supply utilization is equal to
                        'kink_utilization'.

                        Valid values: 0-inf
                    max_borrow_rate:
                      type: string
                      title: >-
                        Max Borrow Rate defines the interest rate for borrowing
                        this

                        asset when supply utilization is at its maximum.

                        Valid values: 0-inf
                    kink_utilization:
                      type: string
                      description: >-
                        Kink Utilization defines the supply utilization value
                        where

                        the kink in the borrow interest rate function occurs.

                        Valid values: 0-1.
                    liquidation_incentive:
                      type: string
                      description: >-
                        Liquidation Incentive determines the portion of bonus
                        collateral of

                        a token type liquidators receive as a liquidation
                        reward.

                        Valid values: 0-1.
                    symbol_denom:
                      type: string
                      description: >-
                        Symbol Denom is the human readable denomination of this
                        token.
                    exponent:
                      type: integer
                      format: int64
                      description: >-
                        Exponent is the power of ten by which to multiply, in
                        order to convert

                        an amount of the token denoted in its symbol denom to
                        the actual amount

                        of its base denom.
                    enable_msg_supply:
                      type: boolean
                      description: >-
                        Enable Msg Supply allows supplying for lending or
                        collateral using this

                        token. `false` means that a token can no longer be
                        supplied.

                        Note that withdrawing is always enabled. Disabling
                        supply would

                        be one step in phasing out an asset type.
                    enable_msg_borrow:
                      type: boolean
                      description: >-
                        Enable Msg Borrow allows borrowing of this token. Note
                        that repaying is

                        always enabled. Disabling borrowing would be one step in
                        phasing out an

                        asset type, but could also be used from the start for
                        asset types meant

                        to be collateral only, like meTokens.
                    blacklist:
                      type: boolean
                      description: >-
                        Blacklist should only be used to eliminate an asset
                        completely. A blacklisted

                        asset is treated as though its oracle price is zero, and
                        thus ignored by

                        calculations such as collateral value and borrow limit.
                        Can still be repaid

                        or withdrawn, but not liquidated. A blacklisted token
                        must have enable_msg_supply

                        and enable_msg_borrow set to false. Such tokens can be
                        safely removed from the

                        oracle and price feeder as well.
                    max_collateral_share:
                      type: string
                      description: >-
                        Max Collateral Share specifies how much of the system's
                        overall collateral

                        can be provided by a given token. 1.0 means that the
                        token has no restriction.

                        0.1 means maximum 10% of system's total collateral value
                        can be provided by this token.

                        Valid values: 0-1.
                    max_supply_utilization:
                      type: string
                      description: >-
                        Max Supply Utilization specifies the maximum supply
                        utilization a token is

                        allowed to reach as a direct result of user borrowing.
                        New borrows are not allowed when

                        the supply utilization is above
                        `max_supply_utilization`.

                        Valid values: 0-1.
                    min_collateral_liquidity:
                      type: string
                      title: >-
                        Min Collateral Liquidity specifies an allowed minimum
                        allowed for the following function:
                            collateral_liquidity(token) = available(token) / total_collateral(token)
                        Borrowing, collateralizing, or withdrawing assets is not
                        allowed when the

                        result of such action invalidates
                        min_collateral_liquidity.

                        Liquidity can only drop below this value due to interest
                        or liquidations.

                        Valid values: 0 - 1
                    max_supply:
                      type: string
                      description: >-
                        Max Supply is the maximum amount of tokens the protocol
                        can hold.

                        Adding more supply of the given token to the protocol
                        will return an error.

                        Must be a non negative value. 0 means that there is no
                        limit.

                        To mark a token as not valid for supply, `msg_supply`
                        must be set to false.
                  description: >-
                    Token defines a token, along with its metadata and
                    parameters, in the Umee

                    capital facility that can be supplied and borrowed.
            description: >-
              QueryRegisteredTokensResponse defines the response structure for
              the

              RegisteredTokens gRPC service handler.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/denoms/active_exchange_rates:
    get:
      summary: ActiveExchangeRates returns all active denoms
      operationId: ActiveExchangeRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              active_rates:
                type: array
                items:
                  type: string
                description: >-
                  activeRates defines a list of the denomination which oracle
                  prices aggreed

                  upon.
            description: |-
              QueryActiveExchangeRatesResponse is response type for the
              Query/ActiveExchangeRates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/denoms/exchange_rates/{denom}:
    get:
      summary: |-
        ExchangeRates returns exchange rates of all denoms,
        or, if specified, returns a single denom
      operationId: ExchangeRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              exchange_rates:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: >-
                  exchange_rates defines a list of the exchange rate for all
                  whitelisted

                  denoms.
            description: |-
              QueryExchangeRatesResponse is response type for the
              Query/ExchangeRates RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom defines the denomination to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/params:
    get:
      summary: Params queries all parameters.
      operationId: OracleParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  vote_period:
                    type: string
                    format: uint64
                  vote_threshold:
                    type: string
                  reward_band:
                    type: string
                  reward_distribution_window:
                    type: string
                    format: uint64
                  accept_list:
                    type: array
                    items:
                      type: object
                      properties:
                        base_denom:
                          type: string
                        symbol_denom:
                          type: string
                        exponent:
                          type: integer
                          format: int64
                      title: Denom - the object to hold configurations of each denom
                  slash_fraction:
                    type: string
                  slash_window:
                    type: string
                    format: uint64
                  min_valid_per_window:
                    type: string
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/slash_window:
    get:
      summary: SlashWindow returns slash window information
      operationId: SlashWindow
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              window_progress:
                type: string
                format: uint64
                description: |-
                  window_progress defines the number of voting periods
                  since the last slashing event would have taken place.
            description: |-
              QuerySlashWindowResponse is response type for the
              Query/SlashWindow RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/valdiators/{validator_addr}/aggregate_vote:
    get:
      summary: AggregateVote returns an aggregate vote of a validator
      operationId: AggregateVote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_vote:
                title: >-
                  aggregate_vote defines oracle aggregate vote submitted by a
                  validator in

                  the current vote period
                type: object
                properties:
                  exchange_rate_tuples:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        exchange_rate:
                          type: string
                      title: >-
                        ExchangeRateTuple - struct to store interpreted exchange
                        rates data to store
                  voter:
                    type: string
                description: |-
                  AggregateExchangeRateVote - struct for voting on
                  the exchange rates of USD denominated in various assets.
            description: |-
              QueryAggregateVoteResponse is response type for the
              Query/AggregateVote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/validators/aggregate_prevotes:
    get:
      summary: AggregatePrevotes returns aggregate prevotes of all validators
      operationId: AggregatePrevotes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_prevotes:
                type: array
                items:
                  type: object
                  properties:
                    hash:
                      type: string
                    voter:
                      type: string
                    submit_block:
                      type: string
                      format: uint64
                  title: >-
                    AggregateExchangeRatePrevote -

                    struct for aggregate prevoting on the ExchangeRateVote.

                    The purpose of aggregate prevote is to hide vote exchange
                    rates with hash

                    which is formatted as hex string in SHA256("{salt}:{exchange

                    rate}{denom},...,{exchange rate}{denom}:{voter}")
                title: >-
                  aggregate_prevotes defines all oracle aggregate prevotes
                  submitted in the

                  current vote period
            description: |-
              QueryAggregatePrevotesResponse is response type for the
              Query/AggregatePrevotes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/validators/aggregate_votes:
    get:
      summary: AggregateVotes returns aggregate votes of all validators
      operationId: AggregateVotes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_votes:
                type: array
                items:
                  type: object
                  properties:
                    exchange_rate_tuples:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          exchange_rate:
                            type: string
                        title: >-
                          ExchangeRateTuple - struct to store interpreted
                          exchange rates data to store
                    voter:
                      type: string
                  description: |-
                    AggregateExchangeRateVote - struct for voting on
                    the exchange rates of USD denominated in various assets.
                title: >-
                  aggregate_votes defines all oracle aggregate votes submitted
                  in the current

                  vote period
            description: |-
              QueryAggregateVotesResponse is response type for the
              Query/AggregateVotes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /umee/oracle/v1/validators/{validator_addr}/aggregate_prevote:
    get:
      summary: AggregatePrevote returns an aggregate prevote of a validator
      operationId: AggregatePrevote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate_prevote:
                type: object
                properties:
                  hash:
                    type: string
                  voter:
                    type: string
                  submit_block:
                    type: string
                    format: uint64
                title: >-
                  AggregateExchangeRatePrevote -

                  struct for aggregate prevoting on the ExchangeRateVote.

                  The purpose of aggregate prevote is to hide vote exchange
                  rates with hash

                  which is formatted as hex string in SHA256("{salt}:{exchange

                  rate}{denom},...,{exchange rate}{denom}:{voter}")
            description: |-
              QueryAggregatePrevoteResponse is response type for the
              Query/AggregatePrevote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/validators/{validator_addr}/feeder:
    get:
      summary: FeederDelegation returns feeder delegation of a validator
      operationId: FeederDelegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              feeder_addr:
                type: string
                title: feeder_addr defines the feeder delegation of a validator
            description: |-
              QueryFeederDelegationResponse is response type for the
              Query/FeederDelegation RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /umee/oracle/v1/validators/{validator_addr}/miss:
    get:
      summary: MissCounter returns oracle miss counter of a validator
      operationId: MissCounter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              miss_counter:
                type: string
                format: uint64
                title: miss_counter defines the oracle miss counter of a validator
            description: |-
              QueryMissCounterResponse is response type for the
              Query/MissCounter RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_addr
          description: validator defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
  umee.leverage.v1.BadDebt:
    type: object
    properties:
      address:
        type: string
      denom:
        type: string
    description: >-
      BadDebt is a bad debt instance used in the leverage module's genesis
      state.
  umee.leverage.v1.Params:
    type: object
    properties:
      complete_liquidation_threshold:
        type: string
        description: >-
          Complete Liquidation Threshold determines how far between

          liquidation_threshold (LT) and collateral_value (CV) a borrower's

          borrowed value must have progressed in order to allow a full
          liquidation.

          0.3 indicates 30% of the way from LT to CV.

          Valid values: 0-1.
      minimum_close_factor:
        type: string
        description: |-
          borrowed           C := collateral
                      value                   value
           --- | ------- | ----- | -------- | ------->
               L                 CL

          liquidation = liquidation_threshold * C
          CL = L + (C-CL) * complete_liquidation_threshold
             is the borrowed value above which close factor will be 1.

          Valid values: 0-1.
        title: >-
          Close Factor determines the portion of a borrower's position that can
          be

          liquidated in a single event. Minimum Close Factor is Close Factor at

          liquidation_threshold. 0.1 means that that 10% of the borrower
          position can

          be liquidated when the borrowed value passes the
          liquidation_threshold.

          close_factor scales linearly between minimum_close_factor and 1.0,

          reaching its maximum when borrowed value passes

          complete_liquidation_threshold. We can put it into the picture:
      oracle_reward_factor:
        type: string
        description: |-
          Oracle Reward Factor determines the portion of interest accrued on
          borrows that is sent to the oracle module to fund its reward pool.
          Valid values: 0-1.
      small_liquidation_size:
        type: string
        description: >-
          Small Liquidation Size determines the USD value at which a borrow is

          considered small enough to be liquidated in a single transaction,
          bypassing

          dynamic close factor.
      direct_liquidation_fee:
        type: string
        description: >-
          Direct Liquidation Fee is a reduction factor in liquidation incentive

          experienced by liquidators who choose to receive base assets instead
          of

          uTokens as liquidation rewards.

          Valid values: 0-1.
    description: Params defines the parameters for the leverage module.
  umee.leverage.v1.QueryAccountBalancesResponse:
    type: object
    properties:
      supplied:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Supplied contains all tokens the account has supplied, including
          interest earned. It is denominated in base tokens, so exponent from
          each coin's registered_tokens entry must be applied to convert to
          symbol denom.
      collateral:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Collateral contains all uTokens the account has collateralized. It is
          denominated in uTokens, so both exponent and uToken exchange rate from
          each coin's market_summary must be applied to convert to base token
          symbol denom.
      borrowed:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: >-
          Borrowed contains all tokens the account has borrowed, including
          interest owed. It is denominated in base tokens, so exponent from each
          coin's registered_tokens entry must be applied to convert to symbol
          denom.
    description: >-
      QueryAccountBalancesResponse defines the response structure for the
      AccountBalances gRPC service handler.
  umee.leverage.v1.QueryAccountSummaryResponse:
    type: object
    properties:
      supplied_value:
        type: string
        description: >-
          Supplied Value is the sum of the USD value of all tokens the account
          has supplied, includng interest earned.
      collateral_value:
        type: string
        description: >-
          Collateral Value is the sum of the USD value of all uTokens the
          account has collateralized.
      borrowed_value:
        type: string
        description: >-
          Borrowed Value is the sum of the USD value of all tokens the account
          has borrowed, including interest owed.
      borrow_limit:
        type: string
        description: >-
          Borrow Limit is the maximum Borrowed Value the account is allowed to
          reach through direct borrowing.
      liquidation_threshold:
        type: string
        description: >-
          Liquidation Threshold is the Borrowed Value at which the account
          becomes eligible for liquidation.
    description: >-
      QueryAccountSummaryResponse defines the response structure for the
      AccountSummary gRPC service handler.
  umee.leverage.v1.QueryBadDebtsResponse:
    type: object
    properties:
      targets:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            denom:
              type: string
          description: >-
            BadDebt is a bad debt instance used in the leverage module's genesis
            state.
        description: >-
          Targets are borrow positions currently marked for bad debt repayment.
          Each contains an Address and a Denom.
    description: >-
      QueryBadDebtsResponse defines the response structure for the BedDebts gRPC
      service handler.
  umee.leverage.v1.QueryLiquidationTargetsResponse:
    type: object
    properties:
      targets:
        type: array
        items:
          type: string
        description: Targets are the addresses of borrowers eligible for liquidation.
    description: >-
      QueryLiquidationTargetsResponse defines the response structure for the
      LiquidationTargets gRPC service handler.
  umee.leverage.v1.QueryMarketSummaryResponse:
    type: object
    properties:
      symbol_denom:
        type: string
        description: >-
          Symbol Denom is the human-readable representation of a token denom,
          for example "UMEE" or "ATOM".
      exponent:
        type: integer
        format: int64
        description: >-
          Exponent is the power of ten required to get from base denom to symbol
          denom. For example, an exponent of 6 means 10^6 uumee = 1 UMEE.
      oracle_price:
        type: string
        description: >-
          Oracle Price is the current USD value of a base token. Exponent must
          be applied to reach the price from symbol_denom. For example, a price
          of $0.000001 for 1 uumee is equivalent to $1.00 for 1 UMEE. Oracle
          price is nil when the oracle is down.
      uToken_exchange_rate:
        type: string
        description: >-
          uToken Exchange Rate is the amount of base tokens received when
          withdrawing 1 uToken. For example, a uToken exchange rate of 1.5 means
          a supplier receives 3 uumee for every 2 u/uumee they wish to withdraw.
          The same applies in reverse: supplying 3 uumee would award 2 u/uumee
          at that time.
      supply_APY:
        type: string
        description: >-
          Supply APY is the current interest rate suppliers are receiving for
          their deposits. For example, 0.11 would mean 11% APY. Supply APY is
          always less than borrow APY.
      borrow_APY:
        type: string
        description: >-
          Borrow APY is the current interest rate borrowers are being charged on
          their loans. For example, 0.2 would mean 20% APY.
      supplied:
        type: string
        description: >-
          Supplied is the total amount of tokens supplied to the the system by
          all suppliers, including any interest earned. This includes that
          tokens which have been borrowed out or enabled as collateral, but
          excludes reserves. Supplied is denominated in base tokens, so exponent
          must be applied to convert to symbol denom.
      reserved:
        type: string
        description: >-
          Reserved is the total amount of tokens held in reserve by the module
          for emergencies. Reserves are always excluded from total supply,
          borrow, collateral, and liqduidity queries. Reserves are denominated
          in base tokens, so exponent must be applied to convert to symbol
          denom.
      collateral:
        type: string
        description: >-
          Collateral is the total amount of uTokens collateralized by all
          borrowers. Collateral is denominated in uTokenso, so both uToken
          exchange rate and exponent must also be applied to convert to symbol
          denom. For example, if collateral is 4000000 u/uumee and uToken
          exhange rate is 1.2, then 5 UMEE have been collateralized.
      borrowed:
        type: string
        description: >-
          Borrowed is the total amount of debt in this token held across all
          borrowers. It is denominated in base tokens, so exponent must be
          applied to convert to symbol denom.
      liquidity:
        type: string
        description: >-
          Liquidity is the amount of a token that has been supplied but not yet
          borrowed or reserved. It is denominated in base tokens, so exponent
          must be applied to convert to symbol denom.
      maximum_borrow:
        type: string
        description: >-
          Maximum Borrow is the amount of a token that is available for
          borrowing, including that which has already been borrowed out. This
          amount is less than total supply due to safety limits. It is
          denominated in base tokens, so exponent must be applied to convert to
          symbol denom. For example, if borrowed is 3000000 uumee and maximum
          borrow is 4000000 uumee, then 1 UMEE is currently available for
          borrowing.
      maximum_collateral:
        type: string
        description: >-
          Maximum Collateral is the amount of a token that can be
          collateralized, including that which is already collateral. This
          amount is less than total supply due to safety limits. It is
          denominated in uTokens, so both uToken exchange rate and exponent must
          be applied to convert to symbol denom. For example, if collateral is
          4000000 u/uumee, uToken exhange rate is 1.2, and maximum borrow is
          7000000 uumee, then a maximum of 2 additional UMEE is permitted to be
          collateralized.
      minimum_liquidity:
        type: string
        description: >-
          Mimimum Liquidity is the minimum amount of liquidity in the module
          required by safety limits, based on the current collateral. It is
          denominated in base tokens, so exponent must be applied to convert to
          symbol denom. For example, if liquidity is 9000000 uumee and minimum
          liquidity is 8000000 uumee, then a maximum of 1 additional UMEE is
          currently available for borrowing or withdrawal.
      uToken_supply:
        type: string
        description: >-
          uToken Supply is the total amount of a base token's associated uToken
          in circulation.
      available_borrow:
        type: string
        description: >-
          Available Borrow is the maximum additional amount of base tokens than
          can be borrowed based on current liquidity and system safety limits.
          It can also be calculated by MIN(maximum_borrow - borrowed, liquidity
          - minimum_liquidity). It is denominated in base tokens, so exponent
          must be applied to convert to symbol denom. A negative availability
          means safety limits have been exceeded and borrowing is temporarily
          unavailable.
      available_withdraw:
        type: string
        description: >-
          Available Withdraw is the maximum amount of uTokens than can currently
          be withdrawn based on liquidity and system safety limits. It can also
          be calculated by (liquidity - minimum_liquidity). It is denominated in
          uTokens, so both uToken exchange rate and exponent must be applied to
          convert to symbol denom. A negative availability means safety limits
          have been exceeded and withdrawal is temporarily unavailable.
      available_collateralize:
        type: string
        description: >-
          Available Collateralize is the maximum additional amount of uTokens
          than can be collateralized based on current liquidity and system
          safety limits. It can also be calculated by (maximum_collateral, -
          collateral). It is denominated in uTokens, so both uToken exchange
          rate and exponent must be applied to convert to symbol denom. A
          negative availability means safety limits have been exceeded and
          additional collateral cannot be created until more liquidity is
          present.
    description: >-
      QueryMarketSummaryResponse defines the response structure for the
      MarketSummary gRPC service handler.
  umee.leverage.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          complete_liquidation_threshold:
            type: string
            description: >-
              Complete Liquidation Threshold determines how far between

              liquidation_threshold (LT) and collateral_value (CV) a borrower's

              borrowed value must have progressed in order to allow a full
              liquidation.

              0.3 indicates 30% of the way from LT to CV.

              Valid values: 0-1.
          minimum_close_factor:
            type: string
            description: |-
              borrowed           C := collateral
                          value                   value
               --- | ------- | ----- | -------- | ------->
                   L                 CL

              liquidation = liquidation_threshold * C
              CL = L + (C-CL) * complete_liquidation_threshold
                 is the borrowed value above which close factor will be 1.

              Valid values: 0-1.
            title: >-
              Close Factor determines the portion of a borrower's position that
              can be

              liquidated in a single event. Minimum Close Factor is Close Factor
              at

              liquidation_threshold. 0.1 means that that 10% of the borrower
              position can

              be liquidated when the borrowed value passes the
              liquidation_threshold.

              close_factor scales linearly between minimum_close_factor and 1.0,

              reaching its maximum when borrowed value passes

              complete_liquidation_threshold. We can put it into the picture:
          oracle_reward_factor:
            type: string
            description: |-
              Oracle Reward Factor determines the portion of interest accrued on
              borrows that is sent to the oracle module to fund its reward pool.
              Valid values: 0-1.
          small_liquidation_size:
            type: string
            description: >-
              Small Liquidation Size determines the USD value at which a borrow
              is

              considered small enough to be liquidated in a single transaction,
              bypassing

              dynamic close factor.
          direct_liquidation_fee:
            type: string
            description: >-
              Direct Liquidation Fee is a reduction factor in liquidation
              incentive

              experienced by liquidators who choose to receive base assets
              instead of

              uTokens as liquidation rewards.

              Valid values: 0-1.
        description: Params defines the parameters for the leverage module.
    description: |-
      QueryParamsResponse defines the response structure for the Params gRPC
      service handler.
  umee.leverage.v1.QueryRegisteredTokensResponse:
    type: object
    properties:
      registry:
        type: array
        items:
          type: object
          properties:
            base_denom:
              type: string
              description: Base Denom is the denomination of the underlying base token.
            reserve_factor:
              type: string
              description: >-
                Reserve Factor defines what portion of accrued interest goes to
                reserves

                when this token is borrowed.

                Valid values: 0-1.
            collateral_weight:
              type: string
              description: >-
                Collateral Weight defines what portion of the total value of the
                asset

                can contribute to a users borrowing power. If the collateral
                weight is

                zero, using this asset as collateral against borrowing will be
                disabled.

                Valid values: 0-1.
            liquidation_threshold:
              type: string
              description: >-
                Liquidation Threshold defines what amount of the total value of
                the

                asset as a collateral can contribute to a user's liquidation
                threshold

                (above which they become eligible for liquidation).

                See also: min_close_factor.

                Valid values: 0-1.
            base_borrow_rate:
              type: string
              title: >-
                Base Borrow Rate defines the minimum interest rate for borrowing
                this

                asset.

                Valid values: 0-inf
            kink_borrow_rate:
              type: string
              title: |-
                Kink Borrow Rate defines the interest rate for borrowing this
                asset when supply utilization is equal to 'kink_utilization'.
                Valid values: 0-inf
            max_borrow_rate:
              type: string
              title: |-
                Max Borrow Rate defines the interest rate for borrowing this
                asset when supply utilization is at its maximum.
                Valid values: 0-inf
            kink_utilization:
              type: string
              description: |-
                Kink Utilization defines the supply utilization value where
                the kink in the borrow interest rate function occurs.
                Valid values: 0-1.
            liquidation_incentive:
              type: string
              description: >-
                Liquidation Incentive determines the portion of bonus collateral
                of

                a token type liquidators receive as a liquidation reward.

                Valid values: 0-1.
            symbol_denom:
              type: string
              description: Symbol Denom is the human readable denomination of this token.
            exponent:
              type: integer
              format: int64
              description: >-
                Exponent is the power of ten by which to multiply, in order to
                convert

                an amount of the token denoted in its symbol denom to the actual
                amount

                of its base denom.
            enable_msg_supply:
              type: boolean
              description: >-
                Enable Msg Supply allows supplying for lending or collateral
                using this

                token. `false` means that a token can no longer be supplied.

                Note that withdrawing is always enabled. Disabling supply would

                be one step in phasing out an asset type.
            enable_msg_borrow:
              type: boolean
              description: >-
                Enable Msg Borrow allows borrowing of this token. Note that
                repaying is

                always enabled. Disabling borrowing would be one step in phasing
                out an

                asset type, but could also be used from the start for asset
                types meant

                to be collateral only, like meTokens.
            blacklist:
              type: boolean
              description: >-
                Blacklist should only be used to eliminate an asset completely.
                A blacklisted

                asset is treated as though its oracle price is zero, and thus
                ignored by

                calculations such as collateral value and borrow limit. Can
                still be repaid

                or withdrawn, but not liquidated. A blacklisted token must have
                enable_msg_supply

                and enable_msg_borrow set to false. Such tokens can be safely
                removed from the

                oracle and price feeder as well.
            max_collateral_share:
              type: string
              description: >-
                Max Collateral Share specifies how much of the system's overall
                collateral

                can be provided by a given token. 1.0 means that the token has
                no restriction.

                0.1 means maximum 10% of system's total collateral value can be
                provided by this token.

                Valid values: 0-1.
            max_supply_utilization:
              type: string
              description: >-
                Max Supply Utilization specifies the maximum supply utilization
                a token is

                allowed to reach as a direct result of user borrowing. New
                borrows are not allowed when

                the supply utilization is above `max_supply_utilization`.

                Valid values: 0-1.
            min_collateral_liquidity:
              type: string
              title: >-
                Min Collateral Liquidity specifies an allowed minimum allowed
                for the following function:
                    collateral_liquidity(token) = available(token) / total_collateral(token)
                Borrowing, collateralizing, or withdrawing assets is not allowed
                when the

                result of such action invalidates min_collateral_liquidity.

                Liquidity can only drop below this value due to interest or
                liquidations.

                Valid values: 0 - 1
            max_supply:
              type: string
              description: >-
                Max Supply is the maximum amount of tokens the protocol can
                hold.

                Adding more supply of the given token to the protocol will
                return an error.

                Must be a non negative value. 0 means that there is no limit.

                To mark a token as not valid for supply, `msg_supply` must be
                set to false.
          description: >-
            Token defines a token, along with its metadata and parameters, in
            the Umee

            capital facility that can be supplied and borrowed.
    description: |-
      QueryRegisteredTokensResponse defines the response structure for the
      RegisteredTokens gRPC service handler.
  umee.leverage.v1.Token:
    type: object
    properties:
      base_denom:
        type: string
        description: Base Denom is the denomination of the underlying base token.
      reserve_factor:
        type: string
        description: >-
          Reserve Factor defines what portion of accrued interest goes to
          reserves

          when this token is borrowed.

          Valid values: 0-1.
      collateral_weight:
        type: string
        description: >-
          Collateral Weight defines what portion of the total value of the asset

          can contribute to a users borrowing power. If the collateral weight is

          zero, using this asset as collateral against borrowing will be
          disabled.

          Valid values: 0-1.
      liquidation_threshold:
        type: string
        description: |-
          Liquidation Threshold defines what amount of the total value of the
          asset as a collateral can contribute to a user's liquidation threshold
          (above which they become eligible for liquidation).
          See also: min_close_factor.
          Valid values: 0-1.
      base_borrow_rate:
        type: string
        title: |-
          Base Borrow Rate defines the minimum interest rate for borrowing this
          asset.
          Valid values: 0-inf
      kink_borrow_rate:
        type: string
        title: |-
          Kink Borrow Rate defines the interest rate for borrowing this
          asset when supply utilization is equal to 'kink_utilization'.
          Valid values: 0-inf
      max_borrow_rate:
        type: string
        title: |-
          Max Borrow Rate defines the interest rate for borrowing this
          asset when supply utilization is at its maximum.
          Valid values: 0-inf
      kink_utilization:
        type: string
        description: |-
          Kink Utilization defines the supply utilization value where
          the kink in the borrow interest rate function occurs.
          Valid values: 0-1.
      liquidation_incentive:
        type: string
        description: |-
          Liquidation Incentive determines the portion of bonus collateral of
          a token type liquidators receive as a liquidation reward.
          Valid values: 0-1.
      symbol_denom:
        type: string
        description: Symbol Denom is the human readable denomination of this token.
      exponent:
        type: integer
        format: int64
        description: >-
          Exponent is the power of ten by which to multiply, in order to convert

          an amount of the token denoted in its symbol denom to the actual
          amount

          of its base denom.
      enable_msg_supply:
        type: boolean
        description: >-
          Enable Msg Supply allows supplying for lending or collateral using
          this

          token. `false` means that a token can no longer be supplied.

          Note that withdrawing is always enabled. Disabling supply would

          be one step in phasing out an asset type.
      enable_msg_borrow:
        type: boolean
        description: >-
          Enable Msg Borrow allows borrowing of this token. Note that repaying
          is

          always enabled. Disabling borrowing would be one step in phasing out
          an

          asset type, but could also be used from the start for asset types
          meant

          to be collateral only, like meTokens.
      blacklist:
        type: boolean
        description: >-
          Blacklist should only be used to eliminate an asset completely. A
          blacklisted

          asset is treated as though its oracle price is zero, and thus ignored
          by

          calculations such as collateral value and borrow limit. Can still be
          repaid

          or withdrawn, but not liquidated. A blacklisted token must have
          enable_msg_supply

          and enable_msg_borrow set to false. Such tokens can be safely removed
          from the

          oracle and price feeder as well.
      max_collateral_share:
        type: string
        description: >-
          Max Collateral Share specifies how much of the system's overall
          collateral

          can be provided by a given token. 1.0 means that the token has no
          restriction.

          0.1 means maximum 10% of system's total collateral value can be
          provided by this token.

          Valid values: 0-1.
      max_supply_utilization:
        type: string
        description: >-
          Max Supply Utilization specifies the maximum supply utilization a
          token is

          allowed to reach as a direct result of user borrowing. New borrows are
          not allowed when

          the supply utilization is above `max_supply_utilization`.

          Valid values: 0-1.
      min_collateral_liquidity:
        type: string
        title: >-
          Min Collateral Liquidity specifies an allowed minimum allowed for the
          following function:
              collateral_liquidity(token) = available(token) / total_collateral(token)
          Borrowing, collateralizing, or withdrawing assets is not allowed when
          the

          result of such action invalidates min_collateral_liquidity.

          Liquidity can only drop below this value due to interest or
          liquidations.

          Valid values: 0 - 1
      max_supply:
        type: string
        description: >-
          Max Supply is the maximum amount of tokens the protocol can hold.

          Adding more supply of the given token to the protocol will return an
          error.

          Must be a non negative value. 0 means that there is no limit.

          To mark a token as not valid for supply, `msg_supply` must be set to
          false.
    description: |-
      Token defines a token, along with its metadata and parameters, in the Umee
      capital facility that can be supplied and borrowed.
  cosmos.base.v1beta1.DecCoin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
  umee.oracle.v1.AggregateExchangeRatePrevote:
    type: object
    properties:
      hash:
        type: string
      voter:
        type: string
      submit_block:
        type: string
        format: uint64
    title: |-
      AggregateExchangeRatePrevote -
      struct for aggregate prevoting on the ExchangeRateVote.
      The purpose of aggregate prevote is to hide vote exchange rates with hash
      which is formatted as hex string in SHA256("{salt}:{exchange
      rate}{denom},...,{exchange rate}{denom}:{voter}")
  umee.oracle.v1.AggregateExchangeRateVote:
    type: object
    properties:
      exchange_rate_tuples:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            exchange_rate:
              type: string
          title: >-
            ExchangeRateTuple - struct to store interpreted exchange rates data
            to store
      voter:
        type: string
    description: |-
      AggregateExchangeRateVote - struct for voting on
      the exchange rates of USD denominated in various assets.
  umee.oracle.v1.Denom:
    type: object
    properties:
      base_denom:
        type: string
      symbol_denom:
        type: string
      exponent:
        type: integer
        format: int64
    title: Denom - the object to hold configurations of each denom
  umee.oracle.v1.ExchangeRateTuple:
    type: object
    properties:
      denom:
        type: string
      exchange_rate:
        type: string
    title: >-
      ExchangeRateTuple - struct to store interpreted exchange rates data to
      store
  umee.oracle.v1.Params:
    type: object
    properties:
      vote_period:
        type: string
        format: uint64
      vote_threshold:
        type: string
      reward_band:
        type: string
      reward_distribution_window:
        type: string
        format: uint64
      accept_list:
        type: array
        items:
          type: object
          properties:
            base_denom:
              type: string
            symbol_denom:
              type: string
            exponent:
              type: integer
              format: int64
          title: Denom - the object to hold configurations of each denom
      slash_fraction:
        type: string
      slash_window:
        type: string
        format: uint64
      min_valid_per_window:
        type: string
    description: Params defines the parameters for the oracle module.
  umee.oracle.v1.QueryActiveExchangeRatesResponse:
    type: object
    properties:
      active_rates:
        type: array
        items:
          type: string
        description: >-
          activeRates defines a list of the denomination which oracle prices
          aggreed

          upon.
    description: |-
      QueryActiveExchangeRatesResponse is response type for the
      Query/ActiveExchangeRates RPC method.
  umee.oracle.v1.QueryAggregatePrevoteResponse:
    type: object
    properties:
      aggregate_prevote:
        type: object
        properties:
          hash:
            type: string
          voter:
            type: string
          submit_block:
            type: string
            format: uint64
        title: >-
          AggregateExchangeRatePrevote -

          struct for aggregate prevoting on the ExchangeRateVote.

          The purpose of aggregate prevote is to hide vote exchange rates with
          hash

          which is formatted as hex string in SHA256("{salt}:{exchange

          rate}{denom},...,{exchange rate}{denom}:{voter}")
    description: |-
      QueryAggregatePrevoteResponse is response type for the
      Query/AggregatePrevote RPC method.
  umee.oracle.v1.QueryAggregatePrevotesResponse:
    type: object
    properties:
      aggregate_prevotes:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
            voter:
              type: string
            submit_block:
              type: string
              format: uint64
          title: >-
            AggregateExchangeRatePrevote -

            struct for aggregate prevoting on the ExchangeRateVote.

            The purpose of aggregate prevote is to hide vote exchange rates with
            hash

            which is formatted as hex string in SHA256("{salt}:{exchange

            rate}{denom},...,{exchange rate}{denom}:{voter}")
        title: >-
          aggregate_prevotes defines all oracle aggregate prevotes submitted in
          the

          current vote period
    description: |-
      QueryAggregatePrevotesResponse is response type for the
      Query/AggregatePrevotes RPC method.
  umee.oracle.v1.QueryAggregateVoteResponse:
    type: object
    properties:
      aggregate_vote:
        title: >-
          aggregate_vote defines oracle aggregate vote submitted by a validator
          in

          the current vote period
        type: object
        properties:
          exchange_rate_tuples:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                exchange_rate:
                  type: string
              title: >-
                ExchangeRateTuple - struct to store interpreted exchange rates
                data to store
          voter:
            type: string
        description: |-
          AggregateExchangeRateVote - struct for voting on
          the exchange rates of USD denominated in various assets.
    description: |-
      QueryAggregateVoteResponse is response type for the
      Query/AggregateVote RPC method.
  umee.oracle.v1.QueryAggregateVotesResponse:
    type: object
    properties:
      aggregate_votes:
        type: array
        items:
          type: object
          properties:
            exchange_rate_tuples:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  exchange_rate:
                    type: string
                title: >-
                  ExchangeRateTuple - struct to store interpreted exchange rates
                  data to store
            voter:
              type: string
          description: |-
            AggregateExchangeRateVote - struct for voting on
            the exchange rates of USD denominated in various assets.
        title: >-
          aggregate_votes defines all oracle aggregate votes submitted in the
          current

          vote period
    description: |-
      QueryAggregateVotesResponse is response type for the
      Query/AggregateVotes RPC method.
  umee.oracle.v1.QueryExchangeRatesResponse:
    type: object
    properties:
      exchange_rates:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: |-
          exchange_rates defines a list of the exchange rate for all whitelisted
          denoms.
    description: |-
      QueryExchangeRatesResponse is response type for the
      Query/ExchangeRates RPC method.
  umee.oracle.v1.QueryFeederDelegationResponse:
    type: object
    properties:
      feeder_addr:
        type: string
        title: feeder_addr defines the feeder delegation of a validator
    description: |-
      QueryFeederDelegationResponse is response type for the
      Query/FeederDelegation RPC method.
  umee.oracle.v1.QueryMissCounterResponse:
    type: object
    properties:
      miss_counter:
        type: string
        format: uint64
        title: miss_counter defines the oracle miss counter of a validator
    description: |-
      QueryMissCounterResponse is response type for the
      Query/MissCounter RPC method.
  umee.oracle.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          vote_period:
            type: string
            format: uint64
          vote_threshold:
            type: string
          reward_band:
            type: string
          reward_distribution_window:
            type: string
            format: uint64
          accept_list:
            type: array
            items:
              type: object
              properties:
                base_denom:
                  type: string
                symbol_denom:
                  type: string
                exponent:
                  type: integer
                  format: int64
              title: Denom - the object to hold configurations of each denom
          slash_fraction:
            type: string
          slash_window:
            type: string
            format: uint64
          min_valid_per_window:
            type: string
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  umee.oracle.v1.QuerySlashWindowResponse:
    type: object
    properties:
      window_progress:
        type: string
        format: uint64
        description: |-
          window_progress defines the number of voting periods
          since the last slashing event would have taken place.
    description: |-
      QuerySlashWindowResponse is response type for the
      Query/SlashWindow RPC method.
