run:
  tests: false

linters:
  enable:
    # - dupl
    # - nestif
    # - rowserrcheck -- enable when it will support generics
    # - whitespace
    # - wsl
    - asciicheck
    - bodyclose
    # TODO; we need re-enable this linter once golangci-lint or .depguard.yaml is done
    # - depguard
    - dogsled
    - errcheck
    - copyloopvar
    - goconst
    - gocritic
    - gofmt
    - goimports
    - gosec
    - gosimple
    - govet
    - grouper
    - ineffassign
    - lll
    - misspell
    - nakedret
    - nolintlint
    - prealloc
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars

issues:
  exclude-dirs:
    - tests/e2e
    - tests/simulation

  exclude-rules:
    - path: _test\.go
      linters:
        - gosec
    - linters:
        - lll
      source: "https://"
  max-same-issues: 50

linters-settings:
  gosec:
    excludes:
      - G115 # FIXME temporarily suppress 'G115: integer overflow conversion': it produces many hits, some of which may be false positives, and need to be looked at;
  dogsled:
    max-blank-identifiers: 3
  misspell:
    locale: US
  revive:
    confidence: 0
    severity: error
    # List of rules to enable explicitly should be a subset of .revive.toml
    # so only critical rules cause CI to fail instead of just generating annotations.
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: empty-block
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: errorf
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: indent-error-flow
      - name: range
      - name: receiver-naming
      # - name: redefines-builtin-id
      - name: superfluous-else
      - name: time-naming
      - name: unexported-return
      - name: unreachable-code
      # - name: unused-parameter
      - name: var-declaration
      - name: var-naming
