# This workflow helps with creating releases.
# This job will only be triggered when a tag (vX.X.x) is pushed
name: Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+" # Official release version tags e.g. v2.0.5
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-rc[0-9]+" # Release candidate tags e.g. v1.0.3-rc4

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Set Env
        run: echo "TM_VERSION=$(go list -m github.com/tendermint/tendermint | sed 's:.* ::')" >> $GITHUB_ENV

      # useful to test builds. However will require to add "push" rule to the "on" section
      - name: goreleaser test-build
        uses: goreleaser/goreleaser-action@v4
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Enable:ReleaseBuild')
        with:
          version: latest
          args: build --rm-dist --skip-validate # skip validate skips initial sanity checks in order to be able to fully run
        env:
          TM_VERSION: ${{ env.TM_VERSION }}
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist --release-notes ./RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TM_VERSION: ${{ env.TM_VERSION }}
