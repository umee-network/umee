name: Tests
on:
  pull_request:
  push:
    branches:
      - main
      - release/**

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  install-tparse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - name: Display Go Version
        run: go version
      - name: Install tparse
        run: |
          export GO111MODULE="on" && go get github.com/mfridman/tparse@v0.8.3
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-tparse-binary

  test-unit-cover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v5
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Test and Create Coverage Report
        run: |
          make test-unit-cover
        if: env.GIT_DIFF
      - uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.txt
          fail_ci_if_error: true
        if: env.GIT_DIFF

  test-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v5
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Build Docker Image
        run: |
          make docker-build-debug
        if: env.GIT_DIFF
      - name: Test E2E
        run: |
          make test-e2e
        if: env.GIT_DIFF

  # split-test-files:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create Packages File
  #       run: go list ./... > pkgs.txt
  #     - name: Split Packages into Files
  #       run: split -d -n l/4 pkgs.txt pkgs.txt.part.
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-00"
  #         path: ./pkgs.txt.part.00
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-01"
  #         path: ./pkgs.txt.part.01
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-02"
  #         path: ./pkgs.txt.part.02
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-03"
  #         path: ./pkgs.txt.part.03

  # upload-coverage-report:
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: technote-space/get-diff-action@v5
  #       with:
  #         PATTERNS: |
  #           **/**.go
  #           go.mod
  #           go.sum
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-00-coverage"
  #       if: env.GIT_DIFF
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-01-coverage"
  #       if: env.GIT_DIFF
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-02-coverage"
  #       if: env.GIT_DIFF
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-03-coverage"
  #       if: env.GIT_DIFF
  #     - run: |
  #         cat ./*profile.out | grep -v "mode: atomic" >> coverage.txt
  #       if: env.GIT_DIFF
  #     - name: filter out DONTCOVER
  #       run: |
  #         excludelist="$(find ./ -type f -name '*.go' | xargs grep -l 'DONTCOVER')"
  #         excludelist+=" $(find ./ -type f -name '*.pb.go')"
  #         excludelist+=" $(find ./ -type f -name '*.pb.gw.go')"
  #         excludelist+=" $(find ./ -type f -path './tests/mocks/*.go')"
  #         for filename in ${excludelist}; do
  #           filename=$(echo $filename | sed 's/^./github.com\/cosmos\/cosmos-sdk/g')
  #           echo "Excluding ${filename} from coverage report..."
  #           sed -i.bak "/$(echo $filename | sed 's/\//\\\//g')/d" coverage.txt
  #         done
  #       if: env.GIT_DIFF
  #     - uses: codecov/codecov-action@v2.1.0
  #       with:
  #         file: ./coverage.txt
  #       if: env.GIT_DIFF

  # tests:
  #   runs-on: ubuntu-latest
  #   needs: split-test-files
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       part: ["00", "01", "02", "03"]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-go@v2.1.4
  #       with:
  #         go-version: 1.17
  #     - uses: technote-space/get-diff-action@v5
  #       with:
  #         PATTERNS: |
  #           **/**.go
  #           go.mod
  #           go.sum
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-${{ matrix.part }}"
  #       if: env.GIT_DIFF
  #     - name: Create Test and Coverage Report
  #       run: |
  #         cat pkgs.txt.part.${{ matrix.part }} | xargs go test -mod=readonly -timeout 30m -coverprofile=${{ matrix.part }}profile.out -covermode=atomic
  #       if: env.GIT_DIFF
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: "${{ github.sha }}-${{ matrix.part }}-coverage"
  #         path: ./${{ matrix.part }}profile.out

  liveness-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17
      - uses: technote-space/get-diff-action@v5
        id: git_diff
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Install Starport
        run: |
          curl https://get.starport.network/starport@v0.17.3! | bash
        if: env.GIT_DIFF
      - name: Start Local Network via Starport
        run: |
          starport chain serve --reset-once -v -c ./starport.ci.yml > starport.out 2>&1 &
        if: env.GIT_DIFF
      - name: Test Local Network Liveness
        run: |
          sleep 2m
          ./contrib/scripts/test_localnet_liveness.sh 100 5 50 localhost
        if: env.GIT_DIFF
